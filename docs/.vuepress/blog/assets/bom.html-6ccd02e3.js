import{_ as t}from"./framework-c27b6911.js";import{r as o,o as i,c as r,a as n,w as F,d as s,e as l,b as e}from"./app-ec006255.js";const y={},d=e(`<h1 id="bom" tabindex="-1"><a class="header-anchor" href="#bom" aria-hidden="true">#</a> BOM</h1><p>浏览器对象模型(Browser Object Model)。</p><h2 id="window对象" tabindex="-1"><a class="header-anchor" href="#window对象" aria-hidden="true">#</a> window对象</h2><p>所有浏览器都支持window对象。它表示浏览器窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.innerWidth </span><span style="color:#88846F;">// 浏览器窗口的内部宽度</span></span>
<span class="line"><span style="color:#F8F8F2;">window.innerHeight </span><span style="color:#88846F;">// 浏览器窗口的内部高度</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>对于IE 8 7 6 5:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">document.documentElement.clientWidth</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">document.documentElement.clientHeight</span></span>
<span class="line"><span style="color:#F8F8F2;">document.body.clientWidth </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> document.body.clientHeight</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打开一个弹窗" tabindex="-1"><a class="header-anchor" href="#打开一个弹窗" aria-hidden="true">#</a> 打开一个弹窗</h3><p>经常会有在当前页面打开弹窗查看某些信息的需求。 有时，在打开弹窗的情况下, 页面内容依然可以滚动,这时需要做一个判断, 在有滚动条的时候隐藏滚动条,并且防止隐藏滚动条时页面内容抖动。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// --------- 判断页面是否有滚动条 -------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">hasScrollbar</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.body.scrollHeight </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.innerHeight </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> document.documentElement.clientHeight</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// --------获取滚动条的宽度 --------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">getScrollBarWidth</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> div </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;div&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  div.style.cssText </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;position:absolute;top:-9999px;&#39;</span><span style="color:#F92672;">+</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;width:100px;height:100px;overflow:scroll;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.body.</span><span style="color:#A6E22E;">appendChild</span><span style="color:#F8F8F2;">(div)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> scrollBarWidth </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> div.offsetWidth </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> div.clientWidth;</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.body.</span><span style="color:#A6E22E;">removeChild</span><span style="color:#F8F8F2;">(div)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> scrollBarWidth;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),v=e(`<h3 id="全局变量" tabindex="-1"><a class="header-anchor" href="#全局变量" aria-hidden="true">#</a> 全局变量</h3><p>通过var定义的全局变量不能通过delete操作符删除,而window属性上定义的变量可以删除。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> firstName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">window.lastName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;irving&#39;</span></span>
<span class="line"><span style="color:#F92672;">delete</span><span style="color:#F8F8F2;"> firstName;</span></span>
<span class="line"><span style="color:#F92672;">delete</span><span style="color:#F8F8F2;"> lastName;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(firstName, window.lastName)  </span><span style="color:#88846F;">// kyrie undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过Object.getOwnPropertyDescriptor()获取一个对象的属性标识符。通过var定义的全局变量 的配置configure为false,而手动在window上添加的属性configure为true.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">Object.</span><span style="color:#A6E22E;">getOwnPropertyDescriptor</span><span style="color:#F8F8F2;">(window,</span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">configurable: false</span></span>
<span class="line"><span style="color:#88846F;">enumerable: true</span></span>
<span class="line"><span style="color:#88846F;">value: &quot;kyrie&quot;</span></span>
<span class="line"><span style="color:#88846F;">writable: true</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Object.</span><span style="color:#A6E22E;">getOwnPropertyDescriptor</span><span style="color:#F8F8F2;">(window,</span><span style="color:#E6DB74;">&#39;lastName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">configurable: true</span></span>
<span class="line"><span style="color:#88846F;">enumerable: true</span></span>
<span class="line"><span style="color:#88846F;">value: &quot;irving&quot;</span></span>
<span class="line"><span style="color:#88846F;">writable: true</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="location" tabindex="-1"><a class="header-anchor" href="#location" aria-hidden="true">#</a> Location</h2><p>window.location 对象用于获得当前页面的地址 (URL) Location对象的href属性是一个字符串,包含URL的完整文本。Location对象的toString()方法返回href的属性值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">parseUrl</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> args </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> query </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.location.search.</span><span style="color:#A6E22E;">substring</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> paris </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> query.</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&amp;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, length </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> paris.length; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> pos </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> paris[i].</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;=&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(pos </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">continue</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> paris.</span><span style="color:#A6E22E;">substring</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">,pos);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> paris.</span><span style="color:#A6E22E;">substring</span><span style="color:#F8F8F2;">(pos</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    args[name] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">decodeURIComponent</span><span style="color:#F8F8F2;">(value)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> args</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器" aria-hidden="true">#</a> 定时器</h2><p>window.setTimeout() 定时器到期后执行一个函数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> timeoutID </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> scope.</span><span style="color:#A6E22E;">setTimeout</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">[, </span><span style="color:#A6E22E;">delay</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">arg1</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">arg2</span><span style="color:#F8F8F2;">, ...]);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回值timeoutID是一个正整数,表示定时器的编号。 这个值可以传递给clearTimeout()来取消定时器。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>setTimeout()和setInterval()共用一个编号池, 技术上,clearTimeout()和clearInterval()可以互换, 但是为了避免混淆, 不要混用取消定时函数。</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 监听窗口是否可见</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;focus&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;focus, I am seen now&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;blur&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;blur, I am hidden&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// -------- visibilitychange ----------</span></span>
<span class="line"><span style="color:#88846F;">// 当其选项卡的内容变得可见或被隐藏时，会在文档上触发 visibilitychange (能见度更改) 事件。</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;visibilitychange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(document.visibilityState) </span><span style="color:#88846F;">// hidden / visible</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;visibilitychange&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (document.visibilityState </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;visible&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    backgroundMusic.</span><span style="color:#A6E22E;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    backgroundMusic.</span><span style="color:#A6E22E;">pause</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-load" tabindex="-1"><a class="header-anchor" href="#window-load" aria-hidden="true">#</a> window.load</h2><p>load事件在整个页面及其所有以来资源如样式表和图片都完成加载时触发。它与<strong>DOMContentLoaded</strong> 不同,后者只要页面DOM加载完成就触发, 无需等待依赖资源的加载。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>所有以 <em>load</em> 命名的事件都不会传递到 <em>window</em>上。要在 <em>window</em> 上捕获 <em>load</em> 事件, 相关的 <em>load</em> 事件必须直接绑定到 <em>window</em> 上。</p></div><h2 id="window-devicepixelratio" tabindex="-1"><a class="header-anchor" href="#window-devicepixelratio" aria-hidden="true">#</a> window.devicePixelRatio</h2><p>window接口的devicePixelRatio返回当前设备的物理分辨率和CSS像素分辨率之比。</p><p>媒体查询以(resolution: 1dppx) 或者(resolution:2dppx) 设置不同分辨率下的样式。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">/* 移动端一像素边框的 一种处理方式 */</span></span>
<span class="line"><span style="color:#F92672;">@media</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">screen</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">min-resolution</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">dppx</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">.border-bottom-1px</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">content</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">position</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">absolute</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">bottom</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">transform</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">scale</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">.5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>canvas 可能在视网膜屏幕上显示得太模糊, 使用window.devicePixelRatio 确定应添加多少额外的像素密度以使图像更清晰。 下面是mdn的一个例子。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> canvas </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;canvas&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> ctx </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> canvas.</span><span style="color:#A6E22E;">getContext</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;2d&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> size </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">200</span></span>
<span class="line"><span style="color:#F8F8F2;">canvas.style.width </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">\`</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">size</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">px\`</span></span>
<span class="line"><span style="color:#F8F8F2;">canvas.style.height </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">\`</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">size</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">px\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> scale </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.devicePixelRatio</span></span>
<span class="line"><span style="color:#F8F8F2;">canvas.width </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">(size </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> scale)</span></span>
<span class="line"><span style="color:#F8F8F2;">canvas.height </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">(size </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> scale)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">ctx.</span><span style="color:#A6E22E;">scale</span><span style="color:#F8F8F2;">(scale, scale)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio",target:"_blank",rel:"noopener noreferrer"},m=e(`<h2 id="window-open" tabindex="-1"><a class="header-anchor" href="#window-open" aria-hidden="true">#</a> window.open</h2><p>window.open() 方法用于打开一个新的浏览器窗口或者查找一个已经命名的窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> opener </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">open</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(opener)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    opener.</span><span style="color:#A6E22E;">close</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, </span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>opener表示对通过window.open()放大打开窗口的引用, 可以通过调用close()方法关闭窗口。</p><h2 id="window-postmessage" tabindex="-1"><a class="header-anchor" href="#window-postmessage" aria-hidden="true">#</a> window.postMessage</h2><p>window.postMessage() 方法可以安全地实现跨源通信。该方法提供了一种受控机制来规避同源限制。 一个窗口可以获得另一个窗口的引用。然后在窗口上调用targetWindow.postMessage() 方法分发一个MessageEvent消息。 接受消息的窗口可以根据需要自由处理此事件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">postMessage</span><span style="color:#F8F8F2;">(message, targetOrigin, [transfer])</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> iframe </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.iframe&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  iframe.contentWindow.</span><span style="color:#A6E22E;">postMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// iframe</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.data) </span><span style="color:#88846F;">// 从父窗口传递过来的数据,数据可以是对象或者数组</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="storage" tabindex="-1"><a class="header-anchor" href="#storage" aria-hidden="true">#</a> Storage</h2><ol><li>window.localStorage</li><li>window.sessionStorage</li></ol><p>window.localStorage和window.sessionStorage提供了访问特定域名下会话存储或者本地存储的功能。 两种方式操作本地数据的API相同,但是window.localStorage存储的数据没有时间限制。除非手动删除, 但是sessionStorage 存储的数据在窗口关闭后会清除(刷新时不会)。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// Storage.setItem()</span></span>
<span class="line"><span style="color:#F8F8F2;">window.localStorage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.localStorage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">, JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">([{firstName:</span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">, lastName:</span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">}]))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Storage.getItem()</span></span>
<span class="line"><span style="color:#F8F8F2;">window.localStorage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Storage.removeItem()</span></span>
<span class="line"><span style="color:#F8F8F2;">window.localStorage.</span><span style="color:#A6E22E;">removeItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Storage.clear()</span></span>
<span class="line"><span style="color:#F8F8F2;">window.localStorage.</span><span style="color:#A6E22E;">clear</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>storage event 当存储区域(localStorage或者sessionStorage)被修改时, 将触发storage事件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;storage&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(event.oldValue))</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(event.newValue))</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.key)  </span><span style="color:#88846F;">// 键更改时</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.type) </span><span style="color:#88846F;">// storage</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.storageArea)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/localStorage",target:"_blank",rel:"noopener noreferrer"},E=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 一个模拟localStorage 可以设置过期事件的变通方法</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> save_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.save-button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> get_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.get-button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// value 是一个对象, 要存储的键值对对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">save</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">expire</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.prototype.toString.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(value) </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;[object Object]&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> last_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(window.localStorage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(key) </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;{}&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.localStorage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(key, JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">last_value,</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">value,</span></span>
<span class="line"><span style="color:#F8F8F2;">      expire: expire </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> (Date.</span><span style="color:#A6E22E;">now</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> expire) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">    }))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(window.localStorage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(key) </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;{}&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (value.expire) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> current </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Date.</span><span style="color:#A6E22E;">now</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (current </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> value.expire) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 过期时删除存储的值</span></span>
<span class="line"><span style="color:#F8F8F2;">      window.localStorage.</span><span style="color:#A6E22E;">removeItem</span><span style="color:#F8F8F2;">(key)</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { expire, </span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">data } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">save_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">save</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;__player__&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">30</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, </span><span style="color:#AE81FF;">10000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">get_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;__player__&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(player)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h={href:"https://www.npmjs.com/package/web-storage-cache",target:"_blank",rel:"noopener noreferrer"},g=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 本地存储加密, 分别使用URIComponent和base64加密， 对称加密</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> encrypt_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.encrypt-button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> decrypt_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.decrypt-button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">encrypt_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">30</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  window.localStorage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;encode_player&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">encodeURIComponent</span><span style="color:#F8F8F2;">(JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">(player)))</span></span>
<span class="line"><span style="color:#F8F8F2;">  window.localStorage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;base_player&#39;</span><span style="color:#F8F8F2;">, window.</span><span style="color:#A6E22E;">btoa</span><span style="color:#F8F8F2;">(JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">(player)))</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">decrypt_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> string_1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.localStorage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;encode_player&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(string_1) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">decodeURIComponent</span><span style="color:#F8F8F2;">(string_1))</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(player)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> string_2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.localStorage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;base_player&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(string_2) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(window.</span><span style="color:#A6E22E;">atob</span><span style="color:#F8F8F2;">(string_2))</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(player)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">catch</span><span style="color:#F8F8F2;">(err) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"https://www.npmjs.com/package/secure-ls",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.npmjs.com/package/crypto-js",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.npmjs.com/package/localstorage-slim",target:"_blank",rel:"noopener noreferrer"},A=e(`<h2 id="window-location" tabindex="-1"><a class="header-anchor" href="#window-location" aria-hidden="true">#</a> window.location</h2><p>window.location是一个只读属性,返回一个location对象,其中包含有关文档当前位置的信息。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.location.href </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;http://www.baidu.com&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">window.location.</span><span style="color:#A6E22E;">assign</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;http://www.baidu.com&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.location.</span><span style="color:#A6E22E;">reload</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.location.</span><span style="color:#A6E22E;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;http://www.baidu.com&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.location.search  </span><span style="color:#88846F;">// 地址?后的部分(设置或者获取)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.location.hash    </span><span style="color:#88846F;">// #a (设置或者获取)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// window.hashchange</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hashchange&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hash changed&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-navigator" tabindex="-1"><a class="header-anchor" href="#window-navigator" aria-hidden="true">#</a> window.navigator</h2><p>window.navigator会返回一个navigator对象的引用。可以用于请求运行当前代码的应用程序的相关信息。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 检测浏览器</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">get_browser</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> browser_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;Chrome&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Safari&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Edge&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Opera&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Firefox&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;MicroMessenger&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> urgent </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.navigator.userAgent</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> b_index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> browser_list.</span><span style="color:#A6E22E;">findIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">b</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> urgent.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(b))</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;">b_index) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> browser_list[b_index]</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;unknown&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> urgent </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">get_browser</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 一个检测浏览器的第三方库 ua-parser-js</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.navigator.onLine </span><span style="color:#88846F;">//检测是否有网络(true/false)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;online&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;online&#39;</span><span style="color:#F8F8F2;">, window.navigator.onLine)  </span><span style="color:#88846F;">// online true</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;offline&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;offline&#39;</span><span style="color:#F8F8F2;">, window.navigator.onLine) </span><span style="color:#88846F;">// offline false</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// navigator.clipboard </span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">Clipboard API Navigator接口添加了只读属性clipboard. 可以实现剪贴,复制,粘贴的功能</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> clipboard_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.clipboard-button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">clipboard_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  window.navigator.clipboard.</span><span style="color:#A6E22E;">writeText</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world, 你好生活&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 查看复制的内容</span></span>
<span class="line"><span style="color:#F8F8F2;">window.navigator.clipboard.</span><span style="color:#A6E22E;">readText</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(res)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 监听copy事件并设置要复制内容</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;copy&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">  e.clipboardData.</span><span style="color:#A6E22E;">setData</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;text/plain&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Hello, world!&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  e.clipboardData.</span><span style="color:#A6E22E;">setData</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;text/html&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&lt;b&gt;Hello, world!&lt;/b&gt;&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  e.</span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">();</span><span style="color:#88846F;">//We want our data, not data from any selection, to be written to the clipboard</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-history" tabindex="-1"><a class="header-anchor" href="#window-history" aria-hidden="true">#</a> window.history</h2><p>window.history对象包含浏览器的历史</p><ol><li>window.history.back()</li><li>window.history.forward()</li><li>window.history.go()</li></ol><h3 id="history-pushstate-history-replacestate" tabindex="-1"><a class="header-anchor" href="#history-pushstate-history-replacestate" aria-hidden="true">#</a> history.pushState / history.replaceState</h3><p>history.pushState(state, title, url) 方法向当前浏览器会话的历史堆栈中添加一个状态。 history.replaceState(state, title, url) 修改当前历史记录实体。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>state 是一个JavaScript状态对象,它与pushState()创建的历史记录条目相关联。 title 当前大多数浏览器都忽略此参数. url 新的历史条目</p></div>`,14),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/History/pushState",target:"_blank",rel:"noopener noreferrer"},x=e(`<p>描述: 从某种程度上说, 调用pushState() 和 window.location = &#39;#foo&#39;基本上一样, 它们都会在当前都document中创建和激活一个新的历史记录。 但是pushState()有以下优势:</p><ol><li>新的url可以是任何和当前url同源的url,当设置window.location只会在你只设置锚的时候才会使用当前url.</li><li>window.location = &#39;#foo&#39; 仅仅会在锚的值不是 #foo情况下创建一条新的历史记录</li><li>可以在新的历史记录中关联任何数据。</li></ol><h3 id="popstate" tabindex="-1"><a class="header-anchor" href="#popstate" aria-hidden="true">#</a> popState</h3><p>当活动历史条目更改时,将会触发popstate事件。 如果被激活的历史条目是通过history.pushState()或者history.replaceState() 的调用影响,popstate事件的state属性包含历史条目的状态对象的副本。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>history.pushState() 或者 history.replaceState() 不会触发popstate事件。 用户点击浏览器的回退按钮,或者history.back() / history.forward() / history.go() 才会触发。</p></div><h2 id="queuemicrotask" tabindex="-1"><a class="header-anchor" href="#queuemicrotask" aria-hidden="true">#</a> queueMicrotask</h2><p>微任务(microtask)的执行顺序在所有挂起的任务(pending tasks)完成之后,在对浏览器的事件循环产生控制之前。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;start&#39;</span><span style="color:#F8F8F2;">, Date.</span><span style="color:#A6E22E;">now</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;setTimeout&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">queueMicrotask</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;queueMicrotask&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;promise&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;end&#39;</span><span style="color:#F8F8F2;">, Date.</span><span style="color:#A6E22E;">now</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">start 1658498438592</span></span>
<span class="line"><span style="color:#88846F;">end 1658498438592</span></span>
<span class="line"><span style="color:#88846F;">queueMicrotask</span></span>
<span class="line"><span style="color:#88846F;">promise</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是MDN上的一个queueMicrotask 的polyfill。 使用的是promise创建一个微任务</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> window.queueMicrotask </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;function&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  window.</span><span style="color:#A6E22E;">queueMicrotask</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">callback</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(callback)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="requestanimationframe" tabindex="-1"><a class="header-anchor" href="#requestanimationframe" aria-hidden="true">#</a> requestAnimationFrame</h2><p>window.requestAnimationFrame()高速浏览器 执行一个动画,并且要求浏览器在下次重绘之前调用指定的 回调函数更新动画。回调函数执行次数通常是每秒60次。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">requestAnimationFrame</span><span style="color:#F8F8F2;">(callback)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">返回一个long整数, 可以传递这个值给window.cancelAnimationFrame()以取消回调函数</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> animation_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">requestAnimationFrame</span><span style="color:#F8F8F2;">(callback)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">cancelAnimationFrame</span><span style="color:#F8F8F2;">(animation_id)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// requestAnimationFrame</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> container </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.animation-container&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> animation_left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> animation_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">translate</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  container.style.transform </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">\`translate3d(</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">animation_left</span><span style="color:#F92672;">++</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">px, 0, 0)\`</span></span>
<span class="line"><span style="color:#F8F8F2;">  animation_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">requestAnimationFrame</span><span style="color:#F8F8F2;">(translate)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (animation_left </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">300</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.</span><span style="color:#A6E22E;">cancelAnimationFrame</span><span style="color:#F8F8F2;">(animation_id)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">translate</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// window.setTimeout()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> container </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.animation-container&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> animation_left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> animation_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">translate</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(animation_id) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">clearTimeout</span><span style="color:#F8F8F2;">(animation_id)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  animation_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    container.style.transform </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">\`translate3d(</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">animation_left</span><span style="color:#F92672;">++</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">px, 0, 0)\`</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (animation_left </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">300</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      window.</span><span style="color:#A6E22E;">clearTimeout</span><span style="color:#F8F8F2;">(animation_id)</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">translate</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, </span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">translate</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),_={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame",target:"_blank",rel:"noopener noreferrer"},B=e(`<h2 id="requestidlecallback" tabindex="-1"><a class="header-anchor" href="#requestidlecallback" aria-hidden="true">#</a> requestIdleCallback</h2><p>window.requestIdleCallback() 方法插入一个函数, 这个函数将在浏览器空闲时期被调用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> handle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">requestIdleCallback</span><span style="color:#F8F8F2;">(callback, [, options])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 返回一个ID, 可以传入window.cancelIdleCallback() 方法用来结束回调</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">options {</span></span>
<span class="line"><span style="color:#88846F;">  timeout:如果指定了timeout,并且有一个正值,而回调在timeout毫秒过后还没有调用,那么回调任务将放入事件循环排队</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestIdleCallback",target:"_blank",rel:"noopener noreferrer"};function j(I,q){const p=o("JavaScript-ModalButton"),c=o("ClientOnly"),a=o("ExternalLinkIcon");return i(),r("div",null,[d,n(c,null,{default:F(()=>[n(p)]),_:1}),v,s("p",null,[s("a",u,[l("Window.devicePixelRatio"),n(a)])]),m,s("p",null,[s("a",b,[l("MDN-localStorage"),n(a)])]),E,s("p",null,[s("a",h,[l("web-storage-cache"),n(a)])]),g,s("p",null,[s("a",w,[l("secure-ls"),n(a)])]),s("p",null,[s("a",f,[l("crypto-js"),n(a)])]),s("p",null,[s("a",D,[l("localstorage-slim"),n(a)])]),A,s("p",null,[s("a",k,[l("MDN-history.pushState"),n(a)])]),x,s("p",null,[s("a",_,[l("MDN-requestAnimationFrame"),n(a)])]),B,s("p",null,[s("a",S,[l("MDN-requestIdleCallback"),n(a)])])])}const L=t(y,[["render",j],["__file","bom.html.vue"]]);export{L as default};
