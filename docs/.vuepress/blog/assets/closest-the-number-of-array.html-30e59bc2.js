import{_ as s}from"./framework-c27b6911.js";import{o as n,c as a,b as l}from"./app-ec006255.js";const o={},p=l(`<h1 id="找到k个最接近的元素" tabindex="-1"><a class="header-anchor" href="#找到k个最接近的元素" aria-hidden="true">#</a> 找到K个最接近的元素</h1><p>给定一个 <strong>排序好</strong> 的数组 <em>arr</em>, 两个整数 <strong>k</strong> 和 <strong>x</strong>, 从数组中找到最靠近 <strong>x</strong> (两数之差最小) 的 <em>k</em>个数。返回的结果必须 要是按升序排好的。</p><p>整数 <em>a</em> 比整数 <em>b</em> 更接近 <em>x</em> 需要满足:</p><ul><li>| a - x | &lt; | b - x | 或者</li><li>| a - x | === | b - x | 且 <em>a &lt; b</em></li></ul><p><strong>解法一</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">closest_array</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">nums</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">[], </span><span style="color:#FD971F;font-style:italic;">k</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">x</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> k</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> (start </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> end) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> mid </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">((start </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> end) </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> ((x </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> arr[mid]) </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> (arr[mid</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">k] </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> x)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mid</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mid </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> arr.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(start, start </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> k)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>因为题目描述里 判断整数 <em>a</em> 和 <em>b</em> 更接近 <em>x</em> 时 使用的是绝对值, 下述判断有一个测试用例无法通过, 暂不确定原因在哪里。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">closest_array</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">nums</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">[], </span><span style="color:#FD971F;font-style:italic;">k</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">x</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> k</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> (start </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> end) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> mid </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">((start </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> end) </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (Math.</span><span style="color:#A6E22E;">abs</span><span style="color:#F8F8F2;">(nums[mid] </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> x) </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">abs</span><span style="color:#F8F8F2;">(nums[mid </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> k] </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> x)){</span></span>
<span class="line"><span style="color:#F8F8F2;">      end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mid</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mid </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> nums.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(start, start </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> k)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,7),e=[p];function F(t,c){return n(),a("div",null,e)}const y=s(o,[["render",F],["__file","closest-the-number-of-array.html.vue"]]);export{y as default};
