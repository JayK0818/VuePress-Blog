import{_ as s}from"./framework-c27b6911.js";import{o as n,c as a,b as e}from"./app-ec006255.js";const l="/assets/session-cookie-28b4c45e.png",o={},p=e(`<h1 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h1><p>服务器收到 HTTP 请求后，服务器可以在响应标头里面添加一个或多个 <strong>Set-Cookie</strong> 选项。浏览器收到响应后通常会保存下 <strong>Cookie</strong>，并将其放在 <strong>HTTP Cookie</strong> 标头内，向同一服务器发出请求时一起发送。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">writeHead</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Set-Cookie&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;language=javascript&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 设置多个cookie</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Set-Cookie&#39;</span><span style="color:#F8F8F2;">: [</span><span style="color:#E6DB74;">&#39;language=javascript&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;name=kyrie&#39;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Content-Type&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;text/plain;charset=utf-8&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 或者通过这种方式</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">setHeader</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Set-Cookie&#39;</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;type=ninja&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;name=lebron&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">end</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你好,世界&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在下一次请求的时候, 浏览器会携带 下发的 Cookie</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Cache-Control&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;max-age=0&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Connection&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;keep-alive&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Cookie&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;language=javascript; type=ninja; name=kyrie&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span><span style="color:#E6DB74;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cookie生命周期" tabindex="-1"><a class="header-anchor" href="#cookie生命周期" aria-hidden="true">#</a> Cookie生命周期</h2><ul><li>会话期Cookie 在当前的会话结束之后删除。</li><li>在过期时间 <em>Expires</em> 指定的日期或 有效期 <em>Max-Age</em> 指定的一段时间之后被删除</li></ul><p><img src="`+l+`" alt="会话Cookie"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">writeHead</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Content-Type&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;text/plain;charset=utf-8&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 设置有效期100s, 超过有效期之后 cookie 不会携带在请求头</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Set-Cookie&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;language=javascript;max-age=100&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="httponly-secure" tabindex="-1"><a class="header-anchor" href="#httponly-secure" aria-hidden="true">#</a> httpOnly / Secure</h2><p>JavaScript 的 document.cookie API 无法访问 带有 httpOnly属性的cookie. 主要目的为防止跨站脚本攻击(XSS)对Cookie的信息窃取。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// node</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">writeHead</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;Set-Cookie&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;language=javascript;max-age=100;httpOnly=true&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// document.cookie  // 空字符串</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>标记为 Secure 的 <strong>Cookie</strong> 只应通过被 <strong>HTTPS</strong> 协议加密过的请求发送给服务端。它永远不会使用不安全的 <strong>HTTP</strong> 发送(localhost除外)</p>`,13),i=[p];function c(r,t){return n(),a("div",null,i)}const y=s(o,[["render",c],["__file","cookie.html.vue"]]);export{y as default};
