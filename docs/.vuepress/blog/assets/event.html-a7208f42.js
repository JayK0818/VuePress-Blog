import{_ as i}from"./framework-c27b6911.js";import{r as a,o as r,c as y,a as n,w as p,d as s,e as o,b as l}from"./app-ec006255.js";const d={},v=l(`<h1 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> Event</h1><ol><li>事件类型(event type)</li><li>事件目标(event target)</li><li>事件对象(event object)</li><li>事件传播(event propagation) -&gt; 事件冒泡和事件捕获</li></ol><h2 id="window事件" tabindex="-1"><a class="header-anchor" href="#window事件" aria-hidden="true">#</a> window事件</h2><p>window.load() 当整个页面及所有依赖资源 如样式表和图片都已经加载完成时, 将触发load事件。</p><p>window.unload() unload()事件处理程序可以用于保存用户的状态,但是它不能用于取消用户转向其他地方</p><p>window.beforeunload() 当浏览器窗口关闭或者刷新时,会触发beforeunload事件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;beforeunload&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// Cancel the event as stated by the standard.</span></span>
<span class="line"><span style="color:#F8F8F2;">  event.</span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// Chrome requires returnValue to be set.</span></span>
<span class="line"><span style="color:#F8F8F2;">  event.returnValue </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>并非所有浏览器都支持此方法,有些浏览器需要事件处理程序实现两个遗留方法中都一个作为替代:</p><ol><li>将字符串分配给事件的returnValue属性</li><li>从事件处理程序返回一个字符串</li></ol></div><h2 id="addeventlistener" tabindex="-1"><a class="header-anchor" href="#addeventlistener" aria-hidden="true">#</a> addEventListener()</h2><p>EventTarget.addEventListener() 将指定的监听器注册到EventTarget上,当该对象触发指定的事件时,指定的回调函数就会被执行。</p><ol><li>它允许给一个事件注册多个监听器。</li><li>它提供了一种更精细的手段控制listener的触发阶段。</li><li>它对任何DOM元素都是有效的。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">target.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(type, listener, options);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// options(可选)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  capture: Boolean  </span><span style="color:#88846F;">// false冒泡阶段, true 捕获阶段</span></span>
<span class="line"><span style="color:#F8F8F2;">  once: Boolean     </span><span style="color:#88846F;">// 如果设置为true,listener会在其被调用之后自动移除</span></span>
<span class="line"><span style="color:#F8F8F2;">  passive: Boolean  </span><span style="color:#88846F;">// 设置为true, 表示listener永远不会调用preventDefault()</span></span>
<span class="line"><span style="color:#F8F8F2;">  signal: AbortSignal </span><span style="color:#88846F;">// 该AbortSignal的abort()方法被调用时,监听器会被移除。</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 检测是否支持passive</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> passiveSupported </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">try</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> options </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#A6E22E;">defineProperty</span><span style="color:#F8F8F2;">({}, </span><span style="color:#E6DB74;">&#39;passive&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">:</span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">      passiveSupported </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">, options)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span><span style="color:#F92672;">catch</span><span style="color:#F8F8F2;">(err) {</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">DomEvent</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">element</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> element</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">addEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">handler</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.addEventListener){</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(type, handler, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.attachEvent){</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.</span><span style="color:#A6E22E;">attachEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;on&#39;</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">type, handler)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element[</span><span style="color:#E6DB74;">&#39;on&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> type] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> handler</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">removeEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">handler</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.removeEventListener){</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.</span><span style="color:#A6E22E;">removeEventListener</span><span style="color:#F8F8F2;">(type, handler, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.detachEvent){</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element.</span><span style="color:#A6E22E;">detachEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;on&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> type)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.element[</span><span style="color:#E6DB74;">&#39;on&#39;</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">type] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">stopPropagation</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(event.</span><span style="color:#A6E22E;">stopPropagation</span><span style="color:#F8F8F2;">()){</span></span>
<span class="line"><span style="color:#F8F8F2;">    event.</span><span style="color:#A6E22E;">stopPropagation</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    event.cancelBubble </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(event.</span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">()) event.</span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(event.returnValue) event.returnValue </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// IE9 及 之前的IE不支持addEventListener()和removeEventListener(), </span></span>
<span class="line"><span style="color:#88846F;">// IE5之后定义了类似的  attachEvent()和 detachEvent()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>stopPropagation()可以在事件传播期间的任何时间调用,它能工作在捕获阶段,事件目标本身中和冒泡阶段</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 如果addEventListener() 注册事件的参数都相同,那么只会执行一次</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">listen_click</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> click_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.click_button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">click_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, listen_click, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">click_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, listen_click, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// 点击button时只会执行一次, listen_click只会执行一次,重复的都被自动抛弃了。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 这样注册时会执行两次,因为函数句柄不相同</span></span>
<span class="line"><span style="color:#F8F8F2;">click_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">click_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">&lt;!-- This 问题 --&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">onclick</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">click1</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">&gt;click-1&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">onclick</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">click2</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">&gt;click-2&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">click1</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click-1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">// window</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">click2</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">t</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click-2&#39;</span><span style="color:#F8F8F2;">, t);  </span><span style="color:#88846F;">// button元素</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="removeeventlistener" tabindex="-1"><a class="header-anchor" href="#removeeventlistener" aria-hidden="true">#</a> removeEventListener()</h2><p>删除使用EventTarget.addEventListener()方法添加的事件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">target.</span><span style="color:#A6E22E;">removeEventListener</span><span style="color:#F8F8F2;">(type, listener[, options]);</span></span>
<span class="line"><span style="color:#F8F8F2;">target.</span><span style="color:#A6E22E;">removeEventListener</span><span style="color:#F8F8F2;">(type, listener[, useCapture]);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>事件处理程序的参数</p><p>在IE8及之前的版本中, 调用事件处理函数时并未传递事件对象作为第一个参数,此时需要通过全局对象window.event来获得事件对象。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">handler</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  event </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> event </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> window.event</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件传播" tabindex="-1"><a class="header-anchor" href="#事件传播" aria-hidden="true">#</a> 事件传播</h2><p>事件捕获 -&gt; 目标对象 -&gt; 事件冒泡</p><p>事件捕获提供了在事件还没有发送到目标之前查看它们的机会,事件捕获能用于程序调试,或者用于事件取消技术, 过滤掉事件从而使目标事件处理程序绝对不会被调用。</p><p>可点击下方带颜色的盒子,从大到小 依次为 box1 box2 box3.</p>`,27),u=s("h2",{id:"event-target",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#event-target","aria-hidden":"true"},"#"),o(" Event.target")],-1),E=s("p",null,"触发事件的对象(某个DOM元素的)引用。 使用该属性可以用来实现事件委托。",-1),m=s("p",null,[s("strong",null,"可点击下方球员列表,会弹出当前球员姓名和li元素索引。")],-1),b=l(`<h2 id="event-currenttarget" tabindex="-1"><a class="header-anchor" href="#event-currenttarget" aria-hidden="true">#</a> Event.currentTarget</h2><p>event.currentTarget总是指向事件绑定的元素。</p><h2 id="event-stoppropagation" tabindex="-1"><a class="header-anchor" href="#event-stoppropagation" aria-hidden="true">#</a> Event.stopPropagation</h2><p>阻止捕获和冒泡阶段中当前事件的进一步传播, 但是它不能阻止任何默认行为的发生,例如对连接的点击仍会被处理。</p><h2 id="event-type" tabindex="-1"><a class="header-anchor" href="#event-type" aria-hidden="true">#</a> Event.type</h2><p>只读属性Event.type会返回一个字符串,表示该事件对象的事件类型。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">getEventType</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.type)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;keypress&#39;</span><span style="color:#F8F8F2;">, getEventType, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;keydown&#39;</span><span style="color:#F8F8F2;">, getEventType, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, getEventType, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">onclick</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#A6E22E;">click1</span><span style="color:#E6DB74;">()&#39;</span><span style="color:#F8F8F2;">&gt;click-1&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">onclick</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#A6E22E;">click2</span><span style="color:#E6DB74;">(</span><span style="color:#FD971F;">this</span><span style="color:#E6DB74;">)&#39;</span><span style="color:#F8F8F2;">&gt;click-2&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">onclick</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">console</span><span style="color:#E6DB74;">.</span><span style="color:#A6E22E;">log</span><span style="color:#E6DB74;">(&quot;Hello World&quot;)&#39;</span><span style="color:#F8F8F2;">&gt;click-3&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// click1 和 click2会在全局作用域下查找。</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">click1</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click-1&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">click2</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">...</span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> { </span><span style="color:#88846F;">// this指向button自身</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(args)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-preventdefault" tabindex="-1"><a class="header-anchor" href="#event-preventdefault" aria-hidden="true">#</a> Event.preventDefault</h2><p>用来阻止浏览器的默认行为, 此事件还是会继续传播。 比如禁止a标签跳转, checkbox选中 或者表单提交等。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkbox&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  event.</span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.link&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  event.</span><span style="color:#A6E22E;">preventDefault</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-stopimmediatepropagation" tabindex="-1"><a class="header-anchor" href="#event-stopimmediatepropagation" aria-hidden="true">#</a> Event.stopImmediatePropagation</h2><p>Event.stopImmediatePropagation() 阻止监听同一事件的其他事件监听器被调用。如果在其中一个事件监听器中执行 stopImmediatePropagation() ，那么剩下的事件监听器都不会被调用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">immediate_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello 1&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">immediate_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello 2&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// event.stopImmediatePropagation() // 不仅阻止事件冒泡, 后面注册的相同类型事件全部不执行</span></span>
<span class="line"><span style="color:#F8F8F2;">  event.</span><span style="color:#A6E22E;">stopPropagation</span><span style="color:#F8F8F2;">() </span><span style="color:#88846F;">// 仅阻止事件冒泡,button注册的其他click事件会被执行</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">immediate_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello 3&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">immediate_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello 4&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="customevent" tabindex="-1"><a class="header-anchor" href="#customevent" aria-hidden="true">#</a> CustomEvent</h2><p>使用CustomEvent 可以创建自定义事件。 此接口从父接口 Event 继承属性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> event </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CustomEvent</span><span style="color:#F8F8F2;">(type, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  detail: </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// default null</span></span>
<span class="line"><span style="color:#F8F8F2;">  bubbles: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">//表示事件是否冒泡</span></span>
<span class="line"><span style="color:#F8F8F2;">  cancelable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 表示事件是否可以取消</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 一个案例</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(e.detail) </span><span style="color:#88846F;">//  {message: &#39;hello world&#39;}</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> custom_event </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CustomEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  detail: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    message: </span><span style="color:#E6DB74;">&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> custom_button </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.custom-button&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">custom_button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  window.</span><span style="color:#A6E22E;">dispatchEvent</span><span style="color:#F8F8F2;">(custom_event)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布订阅模式" tabindex="-1"><a class="header-anchor" href="#发布订阅模式" aria-hidden="true">#</a> 发布订阅模式</h2><p>利用window.addEventListener() / window.removeEventListener() 实现一个发布订阅模式</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">window._on </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.addEventListener</span></span>
<span class="line"><span style="color:#F8F8F2;">window._off </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.removeEventListener</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_once</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">listener</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(type, listener, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  once: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_emit</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">detail</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> window.</span><span style="color:#A6E22E;">dispatchEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CustomEvent</span><span style="color:#F8F8F2;">(type, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  detail</span></span>
<span class="line"><span style="color:#F8F8F2;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">listen_custom_event</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.detail)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;custom-event&#39;</span><span style="color:#F8F8F2;">, listen_custom_event)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;custom-event&#39;</span><span style="color:#F8F8F2;">, { message: </span><span style="color:#E6DB74;">&#39;你好生活&#39;</span><span style="color:#F8F8F2;">})  </span><span style="color:#88846F;">// {message: &#39;你好生活&#39;}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_once</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;once-event&#39;</span><span style="color:#F8F8F2;">, listen_custom_event)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;once-event&#39;</span><span style="color:#F8F8F2;">, { message: </span><span style="color:#E6DB74;">&#39;hello, world&#39;</span><span style="color:#F8F8F2;">})  </span><span style="color:#88846F;">// {message: &#39;hello, world&#39;}</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;once-event&#39;</span><span style="color:#F8F8F2;">, { message: </span><span style="color:#E6DB74;">&#39;hello, world&#39;</span><span style="color:#F8F8F2;">})  </span><span style="color:#88846F;">// 无输出</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;custom-event&#39;</span><span style="color:#F8F8F2;">, { message: </span><span style="color:#E6DB74;">&#39;你好生活&#39;</span><span style="color:#F8F8F2;">})    </span><span style="color:#88846F;">// {message: &#39;你好生活&#39;}</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_off</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;custom-event&#39;</span><span style="color:#F8F8F2;">, listen_custom_event)</span></span>
<span class="line"><span style="color:#F8F8F2;">window.</span><span style="color:#A6E22E;">_emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;custom-event&#39;</span><span style="color:#F8F8F2;">, { message: </span><span style="color:#E6DB74;">&#39;你好生活&#39;</span><span style="color:#F8F8F2;">})  </span><span style="color:#88846F;">//  无输出</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 将上述挂载在window上的事件监听和触发 通过EventTarget修改</span></span>
<span class="line"><span style="color:#88846F;">// EventTarget是一个DOM接口,可以接收事件,并且可以创建侦听器的对象实现。</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">EventEmitter</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">EventTarget</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(type, listener)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">once</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(type, listener, {</span></span>
<span class="line"><span style="color:#F8F8F2;">      once: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">off</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">removeEventListener</span><span style="color:#F8F8F2;">(type, listener)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">data</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">dispatchEvent</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CustomEvent</span><span style="color:#F8F8F2;">(type, {</span></span>
<span class="line"><span style="color:#F8F8F2;">      detail: data</span></span>
<span class="line"><span style="color:#F8F8F2;">    }))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> event_emitter </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">EventEmitter</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">listen_event_emitter</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;event-emitter:&#39;</span><span style="color:#F8F8F2;">, event.detail)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, listen_event_emitter)</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})  </span><span style="color:#88846F;">// 正常触发</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;world&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}) </span><span style="color:#88846F;">// 正常触发</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">off</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, listen_event_emitter)</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})  </span><span style="color:#88846F;">// 此时触发没有输出</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">once</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">, listen_event_emitter)</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;你好&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">event_emitter.</span><span style="color:#A6E22E;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;生活&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget",target:"_blank",rel:"noopener noreferrer"},D=l(`<h2 id="broadcastchannel" tabindex="-1"><a class="header-anchor" href="#broadcastchannel" aria-hidden="true">#</a> BroadcastChannel</h2><p>BroadcastChannel接口代理了一个命名频道, 可以让指定origin下当任意browsing context来订阅它。它允许同源的不同浏览器窗口,tab页面, iframe下的不同文档之间相互通信。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 父窗口</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> channel </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">BroadcastChannel</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">button.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  channel.</span><span style="color:#A6E22E;">postMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  channel.</span><span style="color:#A6E22E;">postMessage</span><span style="color:#F8F8F2;">([{firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">, lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">}])</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 子窗口</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> channel </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">BroadcastChannel</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">channel.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(e.data)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(channel.name)   </span><span style="color:#88846F;">// cat</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>BroadcastChannel.close() 通过调用BroadcastChannel.close() 方法可以马上断开其与对应频道的关联。并让其被垃圾回收。</p></li><li><p>BroadcastChannel.postMessage() BroadcastChannel.postMessage()发送一条任意Object类型的消息。给所有同源下监听了该频道的所有浏览器上下文。</p></li><li><p>BroadcastChannel: message event</p></li></ol><p>监听通过postMessage()发送的消息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> channel </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">BroadcastChannel</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">channel.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(event.data)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function g(f,A){const t=a("JavaScript-Event"),e=a("ClientOnly"),c=a("JavaScript-EventDelegation"),F=a("ExternalLinkIcon");return r(),y("div",null,[v,n(e,null,{default:p(()=>[n(t)]),_:1}),u,E,m,n(e,null,{default:p(()=>[n(c)]),_:1}),b,s("p",null,[s("a",h,[o("MDN-EventTarget"),n(F)])]),D])}const _=i(d,[["render",g],["__file","event.html.vue"]]);export{_ as default};
