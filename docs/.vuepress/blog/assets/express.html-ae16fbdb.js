import{_ as l}from"./framework-c27b6911.js";import{r as e,o as p,c as o,d as s,e as r,a as c,b as n}from"./app-ec006255.js";const i={},F=n(`<h1 id="express" tabindex="-1"><a class="header-anchor" href="#express" aria-hidden="true">#</a> Express</h1><p>基于Node.js 平台 快速 开放 极简的Web开发框架。 本章记录按照express学习过程!</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 下载</span></span>
<span class="line"><span style="color:#F8F8F2;">npm install express</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// create an express application</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">express</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),t={href:"https://www.expressjs.com.cn/5x/api.html#express",target:"_blank",rel:"noopener noreferrer"},y=n(`<h2 id="express-json" tabindex="-1"><a class="header-anchor" href="#express-json" aria-hidden="true">#</a> express.json</h2><p>express.json() is a build-in middleware function in Express. It parse incoming requests with JSON payloads and is based on body-parser. A new body object containing the parsed data is populated on the request object after the middleware (req.body) or an empty object({}) if there was no body to parse.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 前端传递参数</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> xhr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">XMLHttpRequest</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#A6E22E;">open</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;POST&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;/api/login&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#A6E22E;">setRequestHeader</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Content-Type&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;application/json&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  username: </span><span style="color:#E6DB74;">&#39;jack&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  password: </span><span style="color:#AE81FF;">123456</span></span>
<span class="line"><span style="color:#F8F8F2;">}))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// node-sever</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">)()</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(express.</span><span style="color:#A6E22E;">json</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">express.json({</span></span>
<span class="line"><span style="color:#88846F;">  inflate: true  Enables of disables handling defalted(compressed) bodies</span></span>
<span class="line"><span style="color:#88846F;">  limit: &#39;100kb&#39; Controls the maximum request body size.</span></span>
<span class="line"><span style="color:#88846F;">  reviver: null  passed directly to JSON.parse() as the second argument</span></span>
<span class="line"><span style="color:#88846F;">  strict: true   Enables or disable only accepting arrays and objects.</span></span>
<span class="line"><span style="color:#88846F;">})</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/login&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(req.body) </span><span style="color:#88846F;">// { username: jack, password: 123456 }</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;success&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="express-urlencoded" tabindex="-1"><a class="header-anchor" href="#express-urlencoded" aria-hidden="true">#</a> express.urlencoded</h2><p>Express内置的一个中间件用来解析 body 参数。解析的数据将挂载到 req.body 对象里。如果没有数据 将返回一个空对象。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 前端传递的数据形式</span></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#A6E22E;">setRequestHeader</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Content-Type&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;application/x-www-form-urlencoded&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;username=jack&amp;password=123456&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// node-server</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">)()</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(express.</span><span style="color:#A6E22E;">urlencoded</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  extended: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#88846F;">/* This option allows to choose between parsing the URL_encoded data with the querystring (false)</span></span>
<span class="line"><span style="color:#88846F;">library or the qs library (true)*/</span></span>
<span class="line"><span style="color:#F8F8F2;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/login&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(req.body) </span><span style="color:#88846F;">// { username: jack, password: 123456 }</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;success&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="express-static" tabindex="-1"><a class="header-anchor" href="#express-static" aria-hidden="true">#</a> express.static</h2><p>This is a build-in middleware function in Express, It serves static files and is based on <strong>server-static</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 基本使用</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">)()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  express.</span><span style="color:#A6E22E;">static</span><span style="color:#F8F8F2;">(path.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(__dirname, </span><span style="color:#E6DB74;">&#39;public&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 部分参数解析</span></span>
<span class="line"><span style="color:#F8F8F2;">express.</span><span style="color:#A6E22E;">static</span><span style="color:#F8F8F2;">(root, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  dotfiles: </span><span style="color:#E6DB74;">&#39;ignore&#39;</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// 怎么处理 . 开头的文件夹 (allow / deny / ignore)</span></span>
<span class="line"><span style="color:#F8F8F2;">  extensions: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,   </span><span style="color:#88846F;">// 设置文件后缀</span></span>
<span class="line"><span style="color:#F8F8F2;">  index: </span><span style="color:#E6DB74;">&#39;index.html&#39;</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// 指定文件首页</span></span>
<span class="line"><span style="color:#F8F8F2;">  immutable: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">/* Enable or disable the immutable directive in the Cache-Control response header.</span></span>
<span class="line"><span style="color:#88846F;">  If enabled, the maxAge option should also be specified to enable caching.*/</span></span>
<span class="line"><span style="color:#F8F8F2;">  maxAge: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// Set the max-age property of the Cache-Control header in milliseconds</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">setHeaders</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">path</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">stat</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    res.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;x-timestamp&#39;</span><span style="color:#F8F8F2;">, Date.</span><span style="color:#A6E22E;">now</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="express-router" tabindex="-1"><a class="header-anchor" href="#express-router" aria-hidden="true">#</a> express.Router</h2><p>The top-level <strong>express</strong> object has a Router() method that creates a new router object.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> express.</span><span style="color:#A6E22E;">Router</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  caseSensitive: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 路由是否大小写敏感, &#39;/Foo&#39; 和 &#39;/foo&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  mergeParams: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  strict: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// &#39;/foo&#39; 和 &#39;/foo/&#39; 是否一致</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 另一种方式</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">)()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> app.router;</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/login&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 不同的路由对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player_router </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> express.</span><span style="color:#A6E22E;">Router</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> singer_router </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> express.</span><span style="color:#A6E22E;">Router</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player_router.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/player&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">([</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      firstName: </span><span style="color:#E6DB74;">&#39;kyriv&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      firstName: </span><span style="color:#E6DB74;">&#39;lebron&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      lastName: </span><span style="color:#E6DB74;">&#39;james&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  ])</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">singer_router.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/singer&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;周杰伦&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;王力宏&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api&#39;</span><span style="color:#F8F8F2;">, player_router)</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api&#39;</span><span style="color:#F8F8F2;">, singer_router)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once you have created a router object, you can add middleware and HTTP method routes to it just like an application.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">player_router.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="router-param" tabindex="-1"><a class="header-anchor" href="#router-param" aria-hidden="true">#</a> router.param</h2><p>可以用来验证动态路由的参数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">user_router.</span><span style="color:#A6E22E;">param</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;user_id&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">user_id</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> user_id </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Error</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;user_id must be int&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> user_id </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    req.params.user_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Number</span><span style="color:#F8F8F2;">(user_id)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">user_router.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/user/:user_id&#39;</span><span style="color:#F8F8F2;">,  (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(req.params.user_id, </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> req.params.user_id) </span><span style="color:#88846F;">// number</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A param callback will be called only once in a request-response cycle.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#A6E22E;">param</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;CALLED ONLY ONCE&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/user/:id&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;although this matches&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/user/:id&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;and this matches too&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#A6E22E;">end</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">CALLED ONLY ONCE</span></span>
<span class="line"><span style="color:#88846F;">although this matches</span></span>
<span class="line"><span style="color:#88846F;">and this matches too</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="router-use" tabindex="-1"><a class="header-anchor" href="#router-use" aria-hidden="true">#</a> router.use</h2><p>Uses the specified middleware function or functions, This is method is similar to app.use().</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;logger1 - start&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;logger1 - end&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;logger2 - start&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;logger2 - end&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/user&#39;</span><span style="color:#F8F8F2;">, router)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> *  logger1 - start</span></span>
<span class="line"><span style="color:#88846F;">    logger2 - start</span></span>
<span class="line"><span style="color:#88846F;">    logger2 - end</span></span>
<span class="line"><span style="color:#88846F;">    logger1 - end</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The order in which you define middleware with router.use() is very importan. They are invoked sequentially!</p><h2 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> request</h2><p>The <em>req</em> object represents the HTTP request and has properties for the request query string, parameters, body, Http headers, and so on.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">req.baseUrl</span></span>
<span class="line"><span style="color:#F8F8F2;">req.cookies</span></span>
<span class="line"><span style="color:#F8F8F2;">req.hostname</span></span>
<span class="line"><span style="color:#F8F8F2;">req.ip</span></span>
<span class="line"><span style="color:#F8F8F2;">req.method</span></span>
<span class="line"><span style="color:#F8F8F2;">req.path</span></span>
<span class="line"><span style="color:#F8F8F2;">req.protocol</span></span>
<span class="line"><span style="color:#F8F8F2;">req.query</span></span>
<span class="line"><span style="color:#F8F8F2;">req.params</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> response</h2><p>The <em>res</em> object represents the HTTP response that an Express app sends when it gets an HTTP request</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// Appends the specified value to the HTTP response header field.</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Set-Cookie&#39;</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;language=javascript&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">cookie</span><span style="color:#F8F8F2;">(name, value, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  domain: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// Domain name for the cookie</span></span>
<span class="line"><span style="color:#F8F8F2;">  encode: </span><span style="color:#E6DB74;">&#39;encodeURIComponent&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  expires: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 过期时间</span></span>
<span class="line"><span style="color:#F8F8F2;">  httpOnly: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 控制客户端js可否读取cookie</span></span>
<span class="line"><span style="color:#F8F8F2;">  maxAge: </span><span style="color:#AE81FF;">10000</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// Convenient option for setting the expiry time relative to the current time in milliseconds</span></span>
<span class="line"><span style="color:#F8F8F2;">  path: </span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  secure: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// marks the cookie to be used with Https only</span></span>
<span class="line"><span style="color:#F8F8F2;">  signed: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// indicates if the cookie should be signed</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// use to quickly end the response without any data</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">end</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> res.</span><span style="color:#A6E22E;">status</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">end</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// sends a json response.</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">json</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">redirect</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// renders a view and sends the rendered HTML string to the client.</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">render</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(Buffer.</span><span style="color:#A6E22E;">from</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">({ user: </span><span style="color:#E6DB74;">&#39;jack&#39;</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;p&gt;Hello&lt;/p&gt;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// set the http status for the response.</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">status</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// set the response&#39;s http header field to value</span></span>
<span class="line"><span style="color:#F8F8F2;">res.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29);function d(v,u){const a=e("ExternalLinkIcon");return p(),o("div",null,[F,s("p",null,[s("a",t,[r("Express官网"),c(a)])]),y])}const E=l(i,[["render",d],["__file","express.html.vue"]]);export{E as default};
