import{_ as s}from"./framework-c27b6911.js";import{o as n,c as l,b as a}from"./app-ec006255.js";const o={},e=a(`<h1 id="寻找比目标字母大的最小字母" tabindex="-1"><a class="header-anchor" href="#寻找比目标字母大的最小字母" aria-hidden="true">#</a> 寻找比目标字母大的最小字母</h1><p>给你一个字符数组 <strong>letters</strong>, 该数组按 <em>非递减顺序</em> 排序, 以及一个字符 <em>target</em>。 <strong>letters</strong> 里至少有两个不同的字符。</p><p>返回<strong>letters</strong> 中大于 <em>target</em> 的最小字符。如果不存在这样的字符, 则返回 <strong>letters</strong> 的第一个字符。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> letters </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;f&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;j&#39;</span><span style="color:#F8F8F2;">], target </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;a&#39;</span></span>
<span class="line"><span style="color:#88846F;">// 输出 &#39;c&#39;  比 &#39;a&#39; 大的最小字符是 &#39;c&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> letters </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;c&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;f&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;j&quot;</span><span style="color:#F8F8F2;">], target </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;c&quot;</span></span>
<span class="line"><span style="color:#88846F;">// 输出 &#39;f&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> letters </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">  [</span><span style="color:#E6DB74;">&quot;x&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;x&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;y&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;y&quot;</span><span style="color:#F8F8F2;">], target </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;z&quot;</span></span>
<span class="line"><span style="color:#88846F;">// 输出 &#39;x&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法一</strong></p><p>先判断数组中的最后一个值 是否比 目标值还小(因为数组是递增排序), 如果最后一个值比目标值还小, 那么该数组中显然没有一个比目标值大的 字符。此时返回第一个字符。然后使用二分法。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">find_smallest_letter</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">letters</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">[], </span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (letters[letters.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">charCodeAt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> target.</span><span style="color:#A6E22E;">charCodeAt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> letters[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> letters.length</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> (start </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> end) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> middle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">((start </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> end) </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> letter_code </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> letters[middle].</span><span style="color:#A6E22E;">charCodeAt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> target_code </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> target.</span><span style="color:#A6E22E;">charCodeAt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (letter_code </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> target_code) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> middle </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> middle</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> letters[start]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),p=[e];function t(F,c){return n(),l("div",null,p)}const y=s(o,[["render",t],["__file","find-smallest-letter-bigger-than-target.html.vue"]]);export{y as default};
