import{_ as s}from"./framework-c27b6911.js";import{o as n,c as a,b as l}from"./app-ec006255.js";const e={},p=l(`<h1 id="formidable" tabindex="-1"><a class="header-anchor" href="#formidable" aria-hidden="true">#</a> Formidable</h1><p>A Node.js module for parsing form data, especially file uploads</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// Usage with express</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> formidable </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;formidable&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">express</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/upload&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> form </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">formidable</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">    multiples: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  form.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(req, (</span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">fields</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">files</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// Usage with Koa</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> Koa </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;koa&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> formidable </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;formidable&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Koa</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">async</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">ctx</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> form </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">formidable</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">    multiples: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    form.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(ctx.req, (</span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">fields</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">files</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (err) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">      ctx.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Content-Type&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;application/json&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(fields, files)</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">Be aware that you should pass ctx.req which is Node.js&#39;s Request, and not the ctx.request</span></span>
<span class="line"><span style="color:#88846F;">Which is Koa&#39;s Request object --- there is a difference.</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// fields 接收的是formData传递过来的非 文件数据的 键值对象</span></span>
<span class="line"><span style="color:#88846F;">// files为接收的文件对象数组</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">fields { username: &#39;hello&#39; }</span></span>
<span class="line"><span style="color:#88846F;">files {</span></span>
<span class="line"><span style="color:#88846F;">  file: PersistentFile {</span></span>
<span class="line"><span style="color:#88846F;">    _events: [Object: null prototype] { error: [Function (anonymous)] },</span></span>
<span class="line"><span style="color:#88846F;">    _eventsCount: 1,</span></span>
<span class="line"><span style="color:#88846F;">    _maxListeners: undefined,</span></span>
<span class="line"><span style="color:#88846F;">    lastModifiedDate: 2022-10-23T04:12:49.987Z,</span></span>
<span class="line"><span style="color:#88846F;">    filepath: &#39;/var/folders/kt/vrqg0gts6sb93999w0w_3vp40000gn/T/4699b8a63982ce1680f305a00&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    newFilename: &#39;4699b8a63982ce1680f305a00&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    originalFilename: &#39;2f72e6b9aae7cf7759c6840c6867fbdc.jpeg&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    mimetype: &#39;image/jpeg&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    hashAlgorithm: false,</span></span>
<span class="line"><span style="color:#88846F;">    size: 89795,</span></span>
<span class="line"><span style="color:#88846F;">    _writeStream: WriteStream {</span></span>
<span class="line"><span style="color:#88846F;">      fd: 32,</span></span>
<span class="line"><span style="color:#88846F;">      path: &#39;/var/folders/kt/vrqg0gts6sb93999w0w_3vp40000gn/T/4699b8a63982ce1680f305a00&#39;,</span></span>
<span class="line"><span style="color:#88846F;">      flags: &#39;w&#39;,</span></span>
<span class="line"><span style="color:#88846F;">      mode: 438,</span></span>
<span class="line"><span style="color:#88846F;">      start: undefined,</span></span>
<span class="line"><span style="color:#88846F;">      pos: undefined,</span></span>
<span class="line"><span style="color:#88846F;">      bytesWritten: 89795,</span></span>
<span class="line"><span style="color:#88846F;">      closed: false,</span></span>
<span class="line"><span style="color:#88846F;">      _writableState: [WritableState],</span></span>
<span class="line"><span style="color:#88846F;">      _events: [Object: null prototype],</span></span>
<span class="line"><span style="color:#88846F;">      _eventsCount: 1,</span></span>
<span class="line"><span style="color:#88846F;">      _maxListeners: undefined,</span></span>
<span class="line"><span style="color:#88846F;">      [Symbol(kFs)]: [Object],</span></span>
<span class="line"><span style="color:#88846F;">      [Symbol(kIsPerformingIO)]: false,</span></span>
<span class="line"><span style="color:#88846F;">      [Symbol(kCapture)]: false</span></span>
<span class="line"><span style="color:#88846F;">    },</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> formidable </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;formidable&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> form </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">formidable</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  encoding: </span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">,      </span><span style="color:#88846F;">// sets encoding for incoming form fields</span></span>
<span class="line"><span style="color:#F8F8F2;">  uploadDir: </span><span style="color:#E6DB74;">&#39;/temp&#39;</span><span style="color:#F8F8F2;">,     </span><span style="color:#88846F;">// the directory for placing file uploads in</span></span>
<span class="line"><span style="color:#F8F8F2;">  keepExtensions: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// to include the extensions of the original files or not</span></span>
<span class="line"><span style="color:#F8F8F2;">  allowEmptyFiles: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// allow upload empty files</span></span>
<span class="line"><span style="color:#F8F8F2;">  minFileSize: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,         </span><span style="color:#88846F;">// the minium size of uploaded file</span></span>
<span class="line"><span style="color:#F8F8F2;">  maxFileSize: </span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1024</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1024</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// limit the size of uploaded file</span></span>
<span class="line"><span style="color:#F8F8F2;">  multiples: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,        </span><span style="color:#88846F;">// support multiple files using the HTML5 multiple attribute.</span></span>
<span class="line"><span style="color:#F8F8F2;">  filename: </span><span style="color:#AE81FF;">undefined</span><span style="color:#F8F8F2;">,      </span><span style="color:#88846F;">// use it to control newFilename.</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> formidable </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;formidable&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> form </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">formidable</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  multiples: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// progress</span></span>
<span class="line"><span style="color:#88846F;">//文件上传进度事件 (Emitted after each incoming chunk of data that has been parsed)</span></span>
<span class="line"><span style="color:#F8F8F2;">form.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;progress&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">bytesReveived</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">bytesExpected</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// field</span></span>
<span class="line"><span style="color:#88846F;">// formData传递过来的键值对</span></span>
<span class="line"><span style="color:#F8F8F2;">form.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;field&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// fileBegin (Emitted whenever a new file is detected in the upload stream)</span></span>
<span class="line"><span style="color:#F8F8F2;">form.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;fileBegin&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">formname</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">file</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Emitted whenever a field / file pair has been received</span></span>
<span class="line"><span style="color:#F8F8F2;">form.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;file&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">formname</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">file</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// error </span></span>
<span class="line"><span style="color:#88846F;">// Emitted when there is an error processing the incoming form.</span></span>
<span class="line"><span style="color:#F8F8F2;">form.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;error&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// end</span></span>
<span class="line"><span style="color:#F8F8F2;">form.</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;end&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;end&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[p];function i(c,t){return n(),a("div",null,o)}const y=s(e,[["render",i],["__file","formidable.html.vue"]]);export{y as default};
