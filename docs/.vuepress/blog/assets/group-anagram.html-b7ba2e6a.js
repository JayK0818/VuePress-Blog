import{_ as s}from"./framework-c27b6911.js";import{o as n,c as a,b as l}from"./app-ec006255.js";const o={},p=l(`<h1 id="字母异位词分组" tabindex="-1"><a class="header-anchor" href="#字母异位词分组" aria-hidden="true">#</a> 字母异位词分组</h1><p>给你一个字符串数组, 请你将 <strong>字母异位词</strong> 组合在一起。可以按任意顺序返回结果列表。 <strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词。 所有源单词中的字母通常恰好只用一次。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> strs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;eat&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;tea&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;tan&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;ate&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;nat&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;bat&quot;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#88846F;">// [[&quot;bat&quot;],[&quot;nat&quot;,&quot;tan&quot;],[&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;]]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> strs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#88846F;">// [[&#39;&#39;]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> strs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#88846F;">// [[&#39;a&#39;]]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法一</strong></p><p>对每个单词 进行一次遍历, 并对其排序 作为键名, 然后判断是否存在相同的异位词。使用一个数组存储相同的异位词。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">group_anagrams</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">strs</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">[])</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> map</span><span style="color:#F92672;">:</span><span style="color:#A6E22E;text-decoration:underline;">Map</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">[]&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Map</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">of</span><span style="color:#F8F8F2;"> strs) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> key </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">item].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">a</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">b</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> a.</span><span style="color:#A6E22E;">localeCompare</span><span style="color:#F8F8F2;">(b)).</span><span style="color:#A6E22E;">join</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> temp</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> map.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(key) </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">    temp.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(item)</span></span>
<span class="line"><span style="color:#F8F8F2;">    map.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">(key, temp)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> [</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">map.</span><span style="color:#A6E22E;">values</span><span style="color:#F8F8F2;">()]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),t=[p];function e(F,c){return n(),a("div",null,t)}const y=s(o,[["render",e],["__file","group-anagram.html.vue"]]);export{y as default};
