import{_ as s}from"./framework-c27b6911.js";import{o as n,c as l,b as a}from"./app-ec006255.js";const p={},o=a(`<h1 id="整数反转" tabindex="-1"><a class="header-anchor" href="#整数反转" aria-hidden="true">#</a> 整数反转</h1><p>给你一个32位的有符号整数x, 返回将x中的数字部分反转后的结果。如果反转后的整数超过32位的有符号整数的范围 <strong>[−2^31, 2^31 − 1]</strong>, 就返回0</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">123</span><span style="color:#F8F8F2;">     </span><span style="color:#88846F;">// 输出321</span></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">123</span><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 输出-321</span></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">120</span><span style="color:#F8F8F2;">     </span><span style="color:#88846F;">// 输出21</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法一</strong></p><p>将数字转换为字符串 然后再转换为数组 进行反转。将反转后的数组再 转换为数字, 如果数字超出指定的范围则返回0, 否则返回反转后的结果。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">reverse_number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">n</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> is_positive </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> reverse </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">abs</span><span style="color:#F8F8F2;">(n).</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">reverse</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">join</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> is_positive </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Number</span><span style="color:#F8F8F2;">(reverse) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Number</span><span style="color:#F8F8F2;">(reverse))</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (result </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> result</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法二</strong></p><p>将数字转换为字符串之后 根据当前字符串所在的 <strong>位</strong> 进行转换为相应的数字, 依次相加。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">reverse_number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">x</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> is_positive </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">abs</span><span style="color:#F8F8F2;">(x).</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> sum</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> number_string.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    sum </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, i) </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Number</span><span style="color:#F8F8F2;">(number_string[i])</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> is_positive </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> sum)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (result </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> result</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法三</strong></p><p>利用数字每次取余 依次获取数字个位上的数字, 然后取余后 将该数 除10 取整, 再取余 获取十位的数。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">reverse_number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">x</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> is_positive </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">while</span><span style="color:#F8F8F2;">(x </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">10</span></span>
<span class="line"><span style="color:#88846F;">/*负数取余和正数取余 方式不一样. 也可以将数值先取绝对值, 最后再输出结果时 判断输入的是正数 还是负数处理</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#F8F8F2;">    x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> is_positive </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">(x </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">ceil</span><span style="color:#F8F8F2;">(x </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (result </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> result</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),F=[o];function e(t,r){return n(),l("div",null,F)}const i=s(p,[["render",e],["__file","int-reverse.html.vue"]]);export{i as default};
