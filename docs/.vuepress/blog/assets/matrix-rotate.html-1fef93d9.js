import{_ as s}from"./framework-c27b6911.js";import{o as n,c as a,b as l}from"./app-ec006255.js";const p={},o=l(`<h1 id="矩阵旋转" tabindex="-1"><a class="header-anchor" href="#矩阵旋转" aria-hidden="true">#</a> 矩阵旋转</h1><p>给定一个 <strong>n x n</strong> 的二维矩阵 <strong>matrix</strong> 表示一个图像。请你将图像顺时针旋转90度。 你必须在原地旋转图像, 这以为着你需要直接修改 输入的二维矩阵。请 <strong>不要</strong> 使用另一个矩阵来旋转图像。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> matrix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">],[</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">],[</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">]]</span></span>
<span class="line"><span style="color:#88846F;">// 输出 [[7,4,1],[8,5,2],[9,6,3]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> matrix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [[</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">],[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">],[</span><span style="color:#AE81FF;">13</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">],[</span><span style="color:#AE81FF;">15</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">]]</span></span>
<span class="line"><span style="color:#88846F;">// 输出 [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法一</strong></p><p>此题需要搞清楚数组旋转之后, 当前的下标 和 旋转后的 之间的对应关系。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 设置一个 4 * 4的数组旋转 下标对应的关系(左边为当前数字下标,右边为旋转之后的下标)</span></span>
<span class="line"><span style="color:#88846F;">/***</span></span>
<span class="line"><span style="color:#88846F;"> * 0 0 ------&gt; 0 3</span></span>
<span class="line"><span style="color:#88846F;"> * 0 1 ------&gt; 1 3</span></span>
<span class="line"><span style="color:#88846F;"> * 0 2 ------&gt; 2 3</span></span>
<span class="line"><span style="color:#88846F;"> * 0 3 ------&gt; 3 3</span></span>
<span class="line"><span style="color:#88846F;"> * </span></span>
<span class="line"><span style="color:#88846F;"> * </span></span>
<span class="line"><span style="color:#88846F;"> * 1 0 -----&gt; 0 2</span></span>
<span class="line"><span style="color:#88846F;"> * 1 1 -----&gt; 1 2</span></span>
<span class="line"><span style="color:#88846F;"> * 1 2 -----&gt; 2 2</span></span>
<span class="line"><span style="color:#88846F;"> * 1 3 -----&gt; 3 2</span></span>
<span class="line"><span style="color:#88846F;"> * </span></span>
<span class="line"><span style="color:#88846F;"> * 2 0 -----&gt; 0 1</span></span>
<span class="line"><span style="color:#88846F;"> * 2 1 -----&gt; 1 1</span></span>
<span class="line"><span style="color:#88846F;"> * 2 2 -----&gt; 2 1</span></span>
<span class="line"><span style="color:#88846F;"> * 2 3 -----&gt; 3 1</span></span>
<span class="line"><span style="color:#88846F;"> * </span></span>
<span class="line"><span style="color:#88846F;"> * 3 0 ----&gt; 0 0</span></span>
<span class="line"><span style="color:#88846F;"> * 3 1 ----&gt; 1 0</span></span>
<span class="line"><span style="color:#88846F;"> * 3 2 ----&gt; 2 0</span></span>
<span class="line"><span style="color:#88846F;"> * 3 3 ----&gt; 3 0</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 这是一个3 * 3的数组旋转下标对应的关系</span></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 0 0 -----&gt; 0 2</span></span>
<span class="line"><span style="color:#88846F;"> * 0 1 -----&gt; 1 2</span></span>
<span class="line"><span style="color:#88846F;"> * 0 2 -----&gt; 2 2</span></span>
<span class="line"><span style="color:#88846F;"> * </span></span>
<span class="line"><span style="color:#88846F;"> * 1 0 -----&gt; 0 1</span></span>
<span class="line"><span style="color:#88846F;"> * 1 1 -----&gt; 1 1</span></span>
<span class="line"><span style="color:#88846F;"> * 1 2 -----&gt; 2 1</span></span>
<span class="line"><span style="color:#88846F;"> * </span></span>
<span class="line"><span style="color:#88846F;"> * 2 0 -----&gt; 0 0</span></span>
<span class="line"><span style="color:#88846F;"> * 2 1 -----&gt; 1 0</span></span>
<span class="line"><span style="color:#88846F;"> * 2 2 -----&gt; 2 0</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">rotate</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">matrix</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">[][])</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 先保存一份数组每个数字所在的下标</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> map</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> {[</span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#F8F8F2;">  matrix.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">m</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    m.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">number</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">j</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      map[</span><span style="color:#E6DB74;">\`</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">i</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">-</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">j</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> number</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> matrix.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; j </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> matrix.length; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      matrix[j][matrix.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> map[</span><span style="color:#E6DB74;">\`</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">i</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">-</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">j</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解法二</strong></p><p>从题解里看到一种解法, 顺时针旋转二维数组 实际是 先将数组进行上下翻转 然后再对角线 调换数据。利用这个思路实现如下版本</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">rotate</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">matrix</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">[][])</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;">void</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 先将数组上下进行翻转</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> length </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">(matrix.length </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> idx </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> matrix.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> matrix[i]</span></span>
<span class="line"><span style="color:#F8F8F2;">    matrix[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> matrix[idx]</span></span>
<span class="line"><span style="color:#F8F8F2;">    matrix[idx] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> p</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> matrix.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; j </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> i; j</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      [matrix[i][j], matrix[j][i]] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [matrix[j][i], matrix[i][j]]</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),e=[o];function F(t,c){return n(),a("div",null,e)}const y=s(p,[["render",F],["__file","matrix-rotate.html.vue"]]);export{y as default};
