import{_ as o}from"./framework-c27b6911.js";import{r as p,o as t,c,d as s,e as n,a as l,b as e}from"./app-ec006255.js";const i="/assets/mongodb-connect-page-b43547cd.png",r="/assets/mongodb-connect-repl-e42c1423.png",F="/assets/mongodb-node-server-fa0cb11e.png",y="/assets/mongodb-restaurant-87f44570.png",d={},u=s("h1",{id:"mongodb",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mongodb","aria-hidden":"true"},"#"),n(" Mongodb")],-1),v=s("p",null,"Mongodb的一个简介: MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案",-1),m={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>使用命令行连接mongodb数据库</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">mongod </span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">dbpath db</span></span>
<span class="line"><span style="color:#88846F;">// 指定数据文件夹, 在命令行下使用mongod命令需配置环境变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+'" alt="连接成功"><img src="'+r+`" alt="连接成功"></p><p>Mongodb中的一些概念</p><ol><li>database: 数据库</li><li>collection: 数据库表/文档</li><li>row: 数据记录行/文档</li><li>index: 索引</li></ol><p>ObjectID 是唯一主键。由于ObjectId 保存了创建的时间戳, 在文档保存的时候不需要保存时间戳字段。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> newObject </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ObjectId</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> newObject.</span><span style="color:#A6E22E;">getTimestamp</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#A6E22E;">ISODate</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;2017-11-25T07:21:10Z&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The official MongoDB driver for Node.js. The Node.js driver is a library you can use to connect and communicate with MongoDB.</p>`,8),E={href:"https://www.mongodb.com/docs/drivers/node/current/quick-start/",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 安装mongodb模块</span></span>
<span class="line"><span style="color:#F8F8F2;">npm install mongodb </span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">save</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 连接数据库</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { MongoClient } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;mongodb&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">MongoClient</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;mongodb://localhost:27017&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">async</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">run</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 创建数据库</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> database </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">db</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 创建表/集合</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todos </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> database.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todos&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 插入一条数据</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">insertOne</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      text: </span><span style="color:#E6DB74;">&#39;Vue&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      completed: </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">finally</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">close</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">run</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="find-findone" tabindex="-1"><a class="header-anchor" href="#find-findone" aria-hidden="true">#</a> find / findOne</h2><p>You can query for a single document in a collection with the collection.findOne() method. And you can query for multiple documents in a collection with collection.find().</p><p>You can also define additional query options such as sort and projection to configure the result set.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 数据库里的数据</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&quot;lebron&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&quot;james&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">38</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&quot;kyrie&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&quot;irving&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">30</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&quot;chris&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&quot;pual&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">37</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&quot;kevin&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&quot;durant&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">34</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&quot;stephen&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&quot;curry&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">34</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// findOne()</span></span>
<span class="line"><span style="color:#88846F;">/* 下面是三种方法的数据格式 */</span></span>
<span class="line"><span style="color:#88846F;">//...</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> database </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">db</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> players </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> database.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;player&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">findOne</span><span style="color:#F8F8F2;">({})</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  _id: new ObjectId(&quot;632d5b3f325d58c57ebdd737&quot;),</span></span>
<span class="line"><span style="color:#88846F;">  firstName: &#39;lebron&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  lastName: &#39;james&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  age: 38</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 排序</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">findOne</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {age: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  _id: new ObjectId(&quot;632d5b3f325d58c57ebdd737&quot;),</span></span>
<span class="line"><span style="color:#88846F;">  firstName: &#39;lebron&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  lastName: &#39;james&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  age: 38</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">findOne</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {age: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  _id: new ObjectId(&quot;632d5b3f325d58c57ebdd738&quot;),</span></span>
<span class="line"><span style="color:#88846F;">  firstName: &#39;kyrie&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  lastName: &#39;irving&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  age: 30</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 指定返回字段</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">findOne</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  projection: { _id: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, firstName: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, lastName: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{ firstName: &#39;lebron&#39;, lastName: &#39;james&#39; }</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// find()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">// 以数组的方式返回所有数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 年龄小于32的</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({ age: { $lt: </span><span style="color:#AE81FF;">32</span><span style="color:#F8F8F2;"> }}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[</span></span>
<span class="line"><span style="color:#88846F;">  {</span></span>
<span class="line"><span style="color:#88846F;">    _id: new ObjectId(&quot;632d5b3f325d58c57ebdd738&quot;),</span></span>
<span class="line"><span style="color:#88846F;">    firstName: &#39;kyrie&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    lastName: &#39;irving&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    age: 30</span></span>
<span class="line"><span style="color:#88846F;">  }</span></span>
<span class="line"><span style="color:#88846F;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#88846F;">// 年龄大于32的</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({ age: { $gt: </span><span style="color:#AE81FF;">37</span><span style="color:#F8F8F2;"> }}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[</span></span>
<span class="line"><span style="color:#88846F;">  {</span></span>
<span class="line"><span style="color:#88846F;">    _id: new ObjectId(&quot;632d5b3f325d58c57ebdd737&quot;),</span></span>
<span class="line"><span style="color:#88846F;">    firstName: &#39;lebron&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    lastName: &#39;james&#39;,</span></span>
<span class="line"><span style="color:#88846F;">    age: 38</span></span>
<span class="line"><span style="color:#88846F;">  }</span></span>
<span class="line"><span style="color:#88846F;">]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 所有数据从小到大排列</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 所有数据从大到小排列</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 查询有某个字段的</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  age: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    $exists: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// forEach</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> cursor </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({})</span></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">doc</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(doc)})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that large numbers of matched documents can cause performance issues or failures if the operation exceeds memory constraints. Consider using <strong>forEach()</strong> to iterate through results unless you want to return all documents at once.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> cursor </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({})</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> doc </span><span style="color:#F92672;">of</span><span style="color:#F8F8F2;"> cursor) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(doc)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// You can use the hasNext() method to check if a cursor can provide additional data.</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">hasNext</span><span style="color:#F8F8F2;">()) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// cursors expose the stream() method to convert them to Node Readable Streams.</span></span>
<span class="line"><span style="color:#F8F8F2;">cursor.</span><span style="color:#A6E22E;">stream</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">on</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;data&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">doc</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(doc)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="insertone-insertmany" tabindex="-1"><a class="header-anchor" href="#insertone-insertmany" aria-hidden="true">#</a> insertOne / insertMany</h2><p>You can insert a document into a collection using <strong>collection.insertOne()</strong> method. To insert a document, define an object that contains the fields and values that you want to store. If the specified collection does not esist, the insertOne() method creates the collection.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// insertOne()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> database </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">db</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todos </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> database.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">insertOne</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  text: </span><span style="color:#E6DB74;">&#39;学习Vue&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  completed: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  id: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  acknowledged: true,</span></span>
<span class="line"><span style="color:#88846F;">  insertedId: new ObjectId(&quot;632d650bf3597df45e479b4c&quot;)</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can insert multiple documents using the <strong>collection.insertMany()</strong> method. The insertMany() takes an toArray of documents to insert into the specified collection.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// insertMany()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">insertMany</span><span style="color:#F8F8F2;">([</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    text: </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    completed: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    id: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    text: </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    completed: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    id: </span><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    text: </span><span style="color:#E6DB74;">&#39;你好 世界&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    completed: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    id: </span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  acknowledged: true,</span></span>
<span class="line"><span style="color:#88846F;">  insertedCount: 3,</span></span>
<span class="line"><span style="color:#88846F;">  insertedIds: {</span></span>
<span class="line"><span style="color:#88846F;">    &#39;0&#39;: new ObjectId(&quot;632d659edfd2009b8631672d&quot;),</span></span>
<span class="line"><span style="color:#88846F;">    &#39;1&#39;: new ObjectId(&quot;632d659edfd2009b8631672e&quot;),</span></span>
<span class="line"><span style="color:#88846F;">    &#39;2&#39;: new ObjectId(&quot;632d659edfd2009b8631672f&quot;)</span></span>
<span class="line"><span style="color:#88846F;">  }</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updateone-updatemany-replaceone" tabindex="-1"><a class="header-anchor" href="#updateone-updatemany-replaceone" aria-hidden="true">#</a> updateOne / updateMany / replaceOne</h2><p>You can update a single document using the <strong>collection.updateOne()</strong> method. The <strong>updateOne()</strong> method accepts a filter document and an update document.</p><p>set the <strong>upsert</strong> option to true to create a new document if no documents match the filter. Update operations mutate specified fields in one or more documents and leave other fields and values unchanged.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> databse </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">db</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todos </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> databse.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">updateOne</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  {id: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}, </span><span style="color:#88846F;">// create a filter</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    $set: {</span></span>
<span class="line"><span style="color:#F8F8F2;">      completed: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    upsert: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;"> </span><span style="color:#88846F;">// this option instructs the method to create a document if no documents</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  acknowledged: true,</span></span>
<span class="line"><span style="color:#88846F;">  modifiedCount: 1,</span></span>
<span class="line"><span style="color:#88846F;">  upsertedId: null,</span></span>
<span class="line"><span style="color:#88846F;">  upsertedCount: 0,</span></span>
<span class="line"><span style="color:#88846F;">  matchedCount: 1</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 更新数组的某个数据</span></span>
<span class="line"><span style="color:#88846F;">// 数据源</span></span>
<span class="line"><span style="color:#F8F8F2;">[{</span></span>
<span class="line"><span style="color:#F8F8F2;">   name: </span><span style="color:#E6DB74;">&quot;Steve Lobsters&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">   address: </span><span style="color:#E6DB74;">&quot;731 Yexington Avenue&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">   items: [</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;beverage&quot;</span><span style="color:#F8F8F2;">, name: </span><span style="color:#E6DB74;">&quot;Water&quot;</span><span style="color:#F8F8F2;">, size: </span><span style="color:#E6DB74;">&quot;17oz&quot;</span><span style="color:#F8F8F2;">, },</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;pizza&quot;</span><span style="color:#F8F8F2;">, size: </span><span style="color:#E6DB74;">&quot;large&quot;</span><span style="color:#F8F8F2;">, toppings: [</span><span style="color:#E6DB74;">&quot;pepperoni&quot;</span><span style="color:#F8F8F2;">], },</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;pizza&quot;</span><span style="color:#F8F8F2;">, size: </span><span style="color:#E6DB74;">&quot;medium&quot;</span><span style="color:#F8F8F2;">, toppings: [</span><span style="color:#E6DB74;">&quot;mushrooms&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;sausage&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;green peppers&quot;</span><span style="color:#F8F8F2;">], comment: </span><span style="color:#E6DB74;">&quot;Extra green peppers please!&quot;</span><span style="color:#F8F8F2;">, },</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;pizza&quot;</span><span style="color:#F8F8F2;">, size: </span><span style="color:#E6DB74;">&quot;large&quot;</span><span style="color:#F8F8F2;">, toppings: [</span><span style="color:#E6DB74;">&quot;pineapple, ham&quot;</span><span style="color:#F8F8F2;">], comment: </span><span style="color:#E6DB74;">&quot;red pepper flakes on top&quot;</span><span style="color:#F8F8F2;">, },</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;calzone&quot;</span><span style="color:#F8F8F2;">, fillings: [</span><span style="color:#E6DB74;">&quot;canadian bacon&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;sausage&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;onion&quot;</span><span style="color:#F8F8F2;">], },</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;beverage&quot;</span><span style="color:#F8F8F2;">, name: </span><span style="color:#E6DB74;">&quot;Diet Pepsi&quot;</span><span style="color:#F8F8F2;">, size: </span><span style="color:#E6DB74;">&quot;16oz&quot;</span><span style="color:#F8F8F2;">, },</span></span>
<span class="line"><span style="color:#F8F8F2;">   ],</span></span>
<span class="line"><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">   name: </span><span style="color:#E6DB74;">&quot;Popeye&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">   address: </span><span style="color:#E6DB74;">&quot;1 Sweethaven&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">   items: [</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;pizza&quot;</span><span style="color:#F8F8F2;">, size: </span><span style="color:#E6DB74;">&quot;large&quot;</span><span style="color:#F8F8F2;">, toppings: [</span><span style="color:#E6DB74;">&quot;garlic, spinach&quot;</span><span style="color:#F8F8F2;">], },</span></span>
<span class="line"><span style="color:#F8F8F2;">     { type: </span><span style="color:#E6DB74;">&quot;calzone&quot;</span><span style="color:#F8F8F2;">, toppings: [</span><span style="color:#E6DB74;">&quot;ham&quot;</span><span style="color:#F8F8F2;">], },</span></span>
<span class="line"><span style="color:#F8F8F2;">   ],</span></span>
<span class="line"><span style="color:#F8F8F2;">}]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> pizza.</span><span style="color:#A6E22E;">updateOne</span><span style="color:#F8F8F2;">({ name: </span><span style="color:#E6DB74;">&quot;Steve Lobsters&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;items.type&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;pizza&quot;</span><span style="color:#F8F8F2;"> }, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 更新数组items 第一条数据的 size属性</span></span>
<span class="line"><span style="color:#F8F8F2;">  $set: { </span><span style="color:#E6DB74;">&quot;items.$.size&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;extra large&quot;</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> pizza.</span><span style="color:#A6E22E;">updateOne</span><span style="color:#F8F8F2;">({ name: </span><span style="color:#E6DB74;">&#39;Popeye&#39;</span><span style="color:#F8F8F2;"> }, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// items的每个 toppings数组 新增一条 fresh mozzarella</span></span>
<span class="line"><span style="color:#F8F8F2;">  $push: { </span><span style="color:#E6DB74;">&#39;items.$[].toppings&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;fresh mozzarella&#39;</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">updateMany</span><span style="color:#F8F8F2;">({ name: </span><span style="color:#E6DB74;">&#39;Steve Lobsters&#39;</span><span style="color:#F8F8F2;">}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  $push: { </span><span style="color:#E6DB74;">&#39;items.$[orderItem].toppings&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;garlic&#39;</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  arrayFilters: [{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;orderItem.type&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;pizza&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;orderItem.size&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;large&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }]</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// items: the array in the document to update</span></span>
<span class="line"><span style="color:#88846F;">// orderItem: the identifier for the filtered positional operator</span></span>
<span class="line"><span style="color:#88846F;">// toppings: the field on the items array element to update</span></span>
<span class="line"><span style="color:#88846F;">// garlic: the value to push onto the toppings array</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can update multiple documents using the <strong>collection.updateMany()</strong> method.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">updateMany</span><span style="color:#F8F8F2;">({completed: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  $set: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    completed: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  acknowledged: true,</span></span>
<span class="line"><span style="color:#88846F;">  modifiedCount: 4,</span></span>
<span class="line"><span style="color:#88846F;">  upsertedId: null,</span></span>
<span class="line"><span style="color:#88846F;">  upsertedCount: 0,</span></span>
<span class="line"><span style="color:#88846F;">  matchedCount: 4</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>collection.replaceOne()</strong> This operation removes all fields and values in the original document and replaces them with the fields and value in the replacement document. The value of the _id field remains the same unless you explicitly specify a new value for _id in the replacement document.</p><p>Replace operations remove all existing fields in one or more documents and substitute them with specified fields and values.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">replaceOne</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  {id: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">},</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    text: </span><span style="color:#E6DB74;">&#39;我是替换的数据&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    completed: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    create_user: </span><span style="color:#E6DB74;">&#39;jack&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    upsert: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+F+`" alt="mongodb-node-server"></p><h2 id="deleteone-deletemany" tabindex="-1"><a class="header-anchor" href="#deleteone-deletemany" aria-hidden="true">#</a> DeleteOne / DeleteMany</h2><p><strong>deleteOne()</strong> if you do not provide a query document (or if you provide an empty document), MongoDB matches all documents in the collection and deletes the first match.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// deleteOne()  删除一条数据</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">deleteOne</span><span style="color:#F8F8F2;">({ id: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"><span style="color:#88846F;">// { acknowledged: true, deletedCount: 1 }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>you can delete multiple documents in a collection ad once using the <strong>collection.deleteMany()</strong>. While you can use <strong>deleteMany()</strong> to delete all documents in a collection, consider using <strong>drop()</strong> insteat for better performance and clearer code.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">deleteMany</span><span style="color:#F8F8F2;">({completed: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result) </span><span style="color:#88846F;">// { acknowledged: true, deletedCount: 4 }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="count-documents" tabindex="-1"><a class="header-anchor" href="#count-documents" aria-hidden="true">#</a> Count documents</h2><p>The Node.js driver provides two methods for counting documents in a collection.</p><ol><li>collection.countDocuments()</li></ol><p>return the number of documents in the collection that match the specified query. If you specify an empty query document, <strong>countDocuments()</strong> returns the total number of documents in the collection.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 先插入1000条数据</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  array.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">    title: </span><span style="color:#E6DB74;">\`Hello - </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">i</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    id: Math.</span><span style="color:#A6E22E;">random</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">insertMany</span><span style="color:#F8F8F2;">(array)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result_1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">countDocuments</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result_2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">estimatedDocumentCount</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result_1, result_2) </span><span style="color:#88846F;">// 1000 1000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>estimatedDocumentCount()</strong> is faster than <strong>countDocuments()</strong>. <strong>countDocuments()</strong> takes longer to return, but provides an accurate count of the number of documents and supports specifying a filter.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result_1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> todos.</span><span style="color:#A6E22E;">countDocuments</span><span style="color:#F8F8F2;">({ title: </span><span style="color:#E6DB74;">&#39;Hello - 10&#39;</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"><span style="color:#88846F;">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="retrieve-distinct-value" tabindex="-1"><a class="header-anchor" href="#retrieve-distinct-value" aria-hidden="true">#</a> Retrieve distinct value</h2><p>You can retrieve a list of distinct values for a field across a collection by using the <strong>collection.distinct()</strong> method. The distinct() method requires a document filed as a parameter.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">//...</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> database </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">db</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> players </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> database.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;player&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">distinct</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result) </span><span style="color:#88846F;">// [30, 34, 37, 38]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> players.</span><span style="color:#A6E22E;">distinct</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result) </span><span style="color:#88846F;">// [ &#39;chris&#39;, &#39;kevin&#39;, &#39;kyrie&#39;, &#39;lebron&#39;, &#39;stephen&#39; ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的demo来自官网。 (数据源如下所示)</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">[</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;restaurant&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;White Bear&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;borough&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Queens&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;cuisine&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Chinese&quot;</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;restaurant&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Via Carota&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;borough&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Manhattan&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;cuisine&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Italian&quot;</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;restaurant&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Borgatti&#39;s&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;borough&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Bronx&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;cuisine&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Italian&quot;</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;restaurant&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Tanoreen&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;borough&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Brooklyn&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;cuisine&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Middle Eastern&quot;</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;restaurant&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Äpfel&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;borough&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Queens&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;cuisine&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;German&quot;</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;restaurant&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Samba Kitchen&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;borough&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Manhattan&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;cuisine&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Brazilian&quot;</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+y+`" alt="mongodb-restaurant-data"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> cursor </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">distinct</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;borough&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// [ &#39;Bronx&#39;, &#39;Brooklyn&#39;, &#39;Manhattan&#39;, &#39;Queens&#39; ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> cursor </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">distinct</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cuisine&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  borough: { $ne: </span><span style="color:#E6DB74;">&#39;Brooklyn&#39;</span><span style="color:#F8F8F2;"> } </span><span style="color:#88846F;">// exclude Broklyn restuarants from the output.</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// [ &#39;Brazilian&#39;, &#39;Chinese&#39;, &#39;German&#39;, &#39;Italian&#39; ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> Sort</h2><p>Use sort to change the order in which read operations return documents. To sort returned documents by a field in ascending(lowest first) order, use a value of <strong>1</strong>.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 数据源</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span></span>
<span class="line"><span style="color:#F8F8F2;">  { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;The Brothers Karamazov&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;author&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Dostoyevsky&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;length&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">824</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Les Misérables&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;author&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Hugo&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;length&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1462</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Atlas Shrugged&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;author&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Rand&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;length&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1088</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Infinite Jest&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;author&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Wallace&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;length&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1104</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Cryptonomicon&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;author&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Stephenson&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;length&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">918</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;A Dance with Dragons&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;author&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;Martin&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;length&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1104</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> cursor </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({length: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}) </span><span style="color:#88846F;">// 从大到小</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> cursor </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}) </span><span style="color:#88846F;">// 从小到大</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 作为find的第二个参数传递, 效果一样</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    length: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 上述数据源中有两本书的长度一致, 所以返回的结果顺序是无法保证的, 这时可以再指定额外的一个参数用来排序。</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  author: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="skip" tabindex="-1"><a class="header-anchor" href="#skip" aria-hidden="true">#</a> Skip</h2><p>Use skip to omit documents from the beginning of the list of returned documents for a read operation. Using skip without using sort omits arbitrary documents.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 数据源</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;apples&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;qty&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;rating&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;bananas&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;qty&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;rating&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;oranges&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;qty&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;rating&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">   { </span><span style="color:#66D9EF;font-style:italic;">&quot;_id&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;avocados&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;qty&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">&quot;rating&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    rating: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  skip: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> </span><span style="color:#88846F;">// 从大到小排序后 忽略两条数据</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * [</span></span>
<span class="line"><span style="color:#88846F;">      { _id: 3, name: &#39;oranges&#39;, qty: 6, rating: 2 },</span></span>
<span class="line"><span style="color:#88846F;">      { _id: 2, name: &#39;bananas&#39;, qty: 7, rating: 1 }</span></span>
<span class="line"><span style="color:#88846F;">    ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">  */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 或者通过链式调用</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  rating: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">skip</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 超过返回的数据长度, 返回[]</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  rating: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">skip</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="limit" tabindex="-1"><a class="header-anchor" href="#limit" aria-hidden="true">#</a> Limit</h2><p>Limit the number of reuturned results. If limit is used with the skip method, the skip applies first and the limit only applies to the documents left over after the skip.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 此处查询的数据和sort部分一致</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> collection </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> database.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;book&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  length: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">limit</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 2, name: &#39;Les Misérables&#39;, author: &#39;Hugo&#39;, length: 1462 },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 6, name: &#39;A Dance with Dragons&#39;, author: &#39;Martin&#39;, length: 1104},</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 4, name: &#39;Infinite Jest&#39;, author: &#39;Wallace&#39;, length: 1104 }</span></span>
<span class="line"><span style="color:#88846F;">]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 另一种写法</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  sort: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    length: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  limit: </span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The order in which you call <em>limit</em> and <em>sort</em> does not matter because the driver reorders the calls to apply the sort first and the limit after it</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 效果一样的</span></span>
<span class="line"><span style="color:#F8F8F2;">collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">(query).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> }).</span><span style="color:#A6E22E;">limit</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">(query).</span><span style="color:#A6E22E;">limit</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="specify-field-to-return" tabindex="-1"><a class="header-anchor" href="#specify-field-to-return" aria-hidden="true">#</a> Specify field to return</h2><p>Use a projection to control which fields appear in the documents returned by read operations.Many requests only require certain fields.</p><p>有两种使用方式: 显式的指定需要返回的字段, 设置属性为1. 或者显式地设置不需要返回的字段, 设置属性为0</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> collection </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> database.</span><span style="color:#A6E22E;">collection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;fruit&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// The projection document specifies a value of *1* for *name* to indicate that the </span></span>
<span class="line"><span style="color:#88846F;">// read operation result should include the name field of each returned document.</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">project</span><span style="color:#F8F8F2;">({name: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// _id 默认会返回, 因为对每条数据来说是一个特别的标识符, 除非显示的指定不要返回_id.</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 1, name: &#39;apples&#39; },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 2, name: &#39;bananas&#39; },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 3, name: &#39;oranges&#39; },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 4, name: &#39;avocados&#39; }</span></span>
<span class="line"><span style="color:#88846F;">]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> collection.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">project</span><span style="color:#F8F8F2;">({name: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 1, qty: 5, rating: 3 },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 2, qty: 7, rating: 1 },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 3, qty: 6, rating: 2 },</span></span>
<span class="line"><span style="color:#88846F;">  { _id: 4, qty: 3, rating: 5 }</span></span>
<span class="line"><span style="color:#88846F;">]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexes" tabindex="-1"><a class="header-anchor" href="#indexes" aria-hidden="true">#</a> Indexes</h2><p>Indexes are data structures that support the efficient execution of queries in MongoDB. They contain copies of parts of the data in documents to make queries more efficient.</p><p>Without indexes, MongoDB must scan every document in a collection to find the documents that match each query.</p><p>The default name for an index is the concatenation of the indexed keys and each key&#39;s direction in the index. using underscores as a separator.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(index)  </span><span style="color:#88846F;">// length_1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// the index sorts first by length and then, sorts by name</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, name: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(index)  </span><span style="color:#88846F;">// length_1_name_1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}, { name: </span><span style="color:#E6DB74;">&#39;query length&#39;</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(index)  </span><span style="color:#88846F;">// query length</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 数据源</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  location: { state: </span><span style="color:#E6DB74;">&quot;NY&quot;</span><span style="color:#F8F8F2;">, city: </span><span style="color:#E6DB74;">&quot;New York&quot;</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// create an index on an Embedded Field</span></span>
<span class="line"><span style="color:#F8F8F2;">cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({ </span><span style="color:#E6DB74;">&#39;location.state&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// create an index on an Embedded document</span></span>
<span class="line"><span style="color:#F8F8F2;">cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({ location: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki monokai" style="background-color:#272822;" tabindex="0"><code><span class="line"><span style="color:#88846F;">// Single Field Indexes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({ length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">project</span><span style="color:#F8F8F2;">({title: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Compound Indexes</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">The order of the indexed fields has a strong impact on the effectiveness of a particular</span></span>
<span class="line"><span style="color:#88846F;">index of a given query</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">createIndex</span><span style="color:#F8F8F2;">({length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,  name: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(index) </span><span style="color:#88846F;">// length_1_name_1</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> cursor.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">({length:</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,  name:</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">project</span><span style="color:#F8F8F2;">({name:</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, length:</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">toArray</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Clustered Indexes</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">Clustered indexes are indexes that improve the performance of insert, update and delete operations.</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> db </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">db</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;tea&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> db.</span><span style="color:#A6E22E;">createCollection</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;ratings&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  clusteredIndex: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    key: { _id: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">    unique: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,66),f={href:"https://www.mongodb.com/docs/drivers/node/current/quick-reference/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.mongodb.com/docs/manual/introduction/",target:"_blank",rel:"noopener noreferrer"};function g(A,D){const a=p("ExternalLinkIcon");return t(),c("div",null,[u,v,s("p",null,[s("a",m,[n("MongoDB下载地址"),l(a)])]),b,s("p",null,[s("a",E,[n("npm-mongodb"),l(a)])]),h,s("p",null,[s("a",f,[n("Quick-Start"),l(a)])]),s("p",null,[s("a",q,[n("Mongodb"),l(a)])])])}const C=o(d,[["render",g],["__file","mongodb.html.vue"]]);export{C as default};
