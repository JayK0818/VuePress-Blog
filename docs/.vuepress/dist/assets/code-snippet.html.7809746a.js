import{_ as s,o as n,c as a,e as l}from"./app.084d5aed.js";const p={},o=l(`<h1 id="\u4EE3\u7801\u7247\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u7247\u6BB5" aria-hidden="true">#</a> \u4EE3\u7801\u7247\u6BB5</h1><h2 id="object-defineproperty" tabindex="-1"><a class="header-anchor" href="#object-defineproperty" aria-hidden="true">#</a> Object.defineProperty()</h2><p>Object.defineProperty()\u65B9\u6CD5\u4F1A\u76F4\u63A5\u5728\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u5B9A\u4E49\u4E00\u4E2A\u65B0\u5C5E\u6027,\u6216\u8005\u4FEE\u6539\u4E00\u4E2A\u5BF9\u8C61\u7684\u73B0\u6709\u5C5E\u6027,\u5E76\u8FD4\u56DE\u6B64\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Archiver</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> temperature </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> archive </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">defineProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;temperature&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">:</span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> temperature</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">:</span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      temperature </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> value;</span></span>
<span class="line"><span style="color:#F8F8F2;">      archive.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">({value:temperature})</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getArchive</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> archive</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> arc </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Archiver</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">arc.temperature </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">11</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(arc.temperature)  </span><span style="color:#88846F;">// 11</span></span>
<span class="line"><span style="color:#F8F8F2;">arc.temperature </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">arc.temperature </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">13</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(arc.</span><span style="color:#A6E22E;">getArchive</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[{value: 11},{value: 12},{value: 13}]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="isnative-ctor" tabindex="-1"><a class="header-anchor" href="#isnative-ctor" aria-hidden="true">#</a> isNative(Ctor)</h2><p>\u5224\u65AD\u6D4F\u89C8\u5668\u5BF9\u67D0\u4E9B\u539F\u751F\u65B9\u6CD5\u5BF9\u652F\u6301\u60C5\u51B5\u3002\u5982Proxy, Promise, Map, Symbol\u7B49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">Ctor</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> Ctor </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;function&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#E6DB74;"> /native code/</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">test</span><span style="color:#F8F8F2;">(Ctor.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">//--------------------------</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">String</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Date</span><span style="color:#F8F8F2;">)     </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Function</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Boolean</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Symbol</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(), </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">()  </span></span>
<span class="line"><span style="color:#88846F;">// function Object() { [native code] } string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Symbol</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(), </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Symbol</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">()  </span></span>
<span class="line"><span style="color:#88846F;">// function Symbol() { [native code] } string</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5343\u5206\u4F4D\u8F6C\u5316\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5343\u5206\u4F4D\u8F6C\u5316\u6570\u5B57" aria-hidden="true">#</a> \u5343\u5206\u4F4D\u8F6C\u5316\u6570\u5B57</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// ---- \u4F7F\u7528\u6570\u7EC4\u7684reduce \u6216\u8005 forEach \u904D\u5386\u65B9\u6CD5 ----</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">format</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">money</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (money</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> int </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  int.</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">reverse</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">reduce</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">prev</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(i </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> next </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> prev</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> next </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> prev</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> (number_string </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> decimal) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1234567</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">format</span><span style="color:#F8F8F2;">(number)) </span><span style="color:#88846F;">// 1,234,567</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">format</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (number</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> int </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  int.</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">reverse</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">n</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(i </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> (number_string </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> decimal) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// --- \u4F7F\u7528\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5 -----</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">format</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">money</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (money</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> int </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> int.length</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> int.length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(j </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> int[i] </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      number_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> int[i] </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> (number_string </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> decimal) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> number_string</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1234567678</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">format</span><span style="color:#F8F8F2;">(number)) </span><span style="color:#88846F;">// 1,234,567,678</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5177\u6709\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5177\u6709\u5C5E\u6027" aria-hidden="true">#</a> \u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5177\u6709\u5C5E\u6027</h2><h3 id="in\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#in\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> in\u8FD0\u7B97\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">, lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> player)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> player)        </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// in\u8FD0\u7B97\u7B26\u4E5F\u53EF\u4EE5\u8BBF\u95EE\u5BF9\u8C61\u539F\u578B\u4E0A\u7684\u5C5E\u6027</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">( </span><span style="color:#E6DB74;">&#39;toString&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> player)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-has" tabindex="-1"><a class="header-anchor" href="#reflect-has" aria-hidden="true">#</a> Reflect.has()</h3><p>\u8BED\u6CD5: Reflect.has(object, property)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Reflect</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">has</span><span style="color:#F8F8F2;">(player, </span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Reflect</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">has</span><span style="color:#F8F8F2;">(player, </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">))       </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hasownproperty" tabindex="-1"><a class="header-anchor" href="#hasownproperty" aria-hidden="true">#</a> hasOwnProperty</h3><p>\u8BED\u6CD5: object.hasOwnProperty(property)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(player.</span><span style="color:#A6E22E;">hasOwnProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(player.</span><span style="color:#A6E22E;">hasOwnProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">))       </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5199\u6CD5\u4F1A\u6709\u4E00\u4E2A\u7F3A\u70B9, \u5C31\u662F\u5982\u679C\u5BF9\u8C61\u662F\u4F7F\u7528Object.create(null)\u521B\u5EFA\u7684\u8BDD, \u76F4\u63A5\u5728\u5BF9\u8C61\u4E0A\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u62A5\u9519</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  firstName: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    value: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    writable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    enumerable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurable: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  lastName: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    value: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    writable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    enumerable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurable: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">//  player.hasOwnProperty is not a function  \u62A5\u9519</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Object.prototype.hasOwnProperty.call(obj, property) \u53EF\u4EE5\u8FD9\u4E48\u8C03\u7528</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.prototype.hasOwnProperty.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(player, </span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-hasown" tabindex="-1"><a class="header-anchor" href="#object-hasown" aria-hidden="true">#</a> Object.hasOwn</h3><p>ES2022\u4E2D\u4E00\u4E2A\u65B0\u7684\u65B9\u6CD5, \u5982\u679C\u5BF9\u8C61\u4E2D\u5B58\u5728\u67D0\u4E2A\u6267\u884C\u5C5E\u6027\u5219\u8FD4\u56DEtrue, \u5982\u679C\u4E0D\u5B58\u5728 \u6216\u8005\u51FA\u73B0\u51FA\u73B0\u5728\u539F\u578B\u4E0A \u5219\u8FD4\u56DEfalse.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">hasOwn</span><span style="color:#F8F8F2;">(player, </span><span style="color:#E6DB74;">&#39;firstName&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">hasOwn</span><span style="color:#F8F8F2;">(player, </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nan" tabindex="-1"><a class="header-anchor" href="#nan" aria-hidden="true">#</a> NaN</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;">// number</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getOwnPropertyDescriptor</span><span style="color:#F8F8F2;">(window, </span><span style="color:#E6DB74;">&#39;NaN&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getOwnPropertyDescriptor</span><span style="color:#F8F8F2;">(window, </span><span style="color:#E6DB74;">&#39;NaN&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  configurable: false</span></span>
<span class="line"><span style="color:#88846F;">  enumerable: false</span></span>
<span class="line"><span style="color:#88846F;">  value: NaN</span></span>
<span class="line"><span style="color:#88846F;">  writable: false</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Number.isNaN() \u662FES6 \u65B0\u589E\u7684\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getOwnPropertyDescriptor</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;NaN&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  configurable: false</span></span>
<span class="line"><span style="color:#88846F;">  enumerable: false</span></span>
<span class="line"><span style="color:#88846F;">  value: NaN</span></span>
<span class="line"><span style="color:#88846F;">  writable: false</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// -------- \u5224\u65AD\u662F\u5426\u4E3ANaN ----------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">isNaN</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;number&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> number</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">isNaN</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><h3 id="array-from" tabindex="-1"><a class="header-anchor" href="#array-from" aria-hidden="true">#</a> Array.from</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u5C06length \u8F6C\u6362\u4E3A \u5408\u6CD5\u7684\u503C</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ToIntegerInfinity</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;number&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> number </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">(number)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">isNaN</span><span style="color:#F8F8F2;">(n)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">!</span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">isFinite</span><span style="color:#F8F8F2;">(n)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">n</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">myArrayFrom</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arg</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">callback</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">thisArg</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> arg </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> arg </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;object&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(callback </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> callback </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;function&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Error</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;callback must be a function&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> length </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">(arg) </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> arg.length </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ToIntegerInfinity</span><span style="color:#F8F8F2;">(arg.length)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> temp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arg[i]</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(callback) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      temp[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> thisArg </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;undefined&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">callback</span><span style="color:#F8F8F2;">(item, i) </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> callback.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(thisArg, item, i)</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      temp[i] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> item</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> temp</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> _temp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">myArrayFrom</span><span style="color:#F8F8F2;">({length: </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">}, (</span><span style="color:#FD971F;font-style:italic;">_</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">\`hello-</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">i</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(_temp)</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[</span></span>
<span class="line"><span style="color:#88846F;">  &#39;hello-0&#39;, &#39;hello-1&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  &#39;hello-2&#39;, &#39;hello-3&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  &#39;hello-4&#39;, &#39;hello-5&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  &#39;hello-6&#39;, &#39;hello-7&#39;,</span></span>
<span class="line"><span style="color:#88846F;">  &#39;hello-8&#39;, &#39;hello-9&#39;</span></span>
<span class="line"><span style="color:#88846F;">]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> _array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">myArrayFrom</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">], (</span><span style="color:#FD971F;font-style:italic;">_</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({label: _.</span><span style="color:#A6E22E;">toUpperCase</span><span style="color:#F8F8F2;">(), value: i}))</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(_array)</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">[ { label: &#39;HELLO&#39;, value: 0 }, { label: &#39;WORLD&#39;, value: 1 } ]</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> _this </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">myArrayFrom</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">_</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    label: </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">[i] </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> _,</span></span>
<span class="line"><span style="color:#F8F8F2;">    value: i</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}, {</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;\u4F60\u597D&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;\u4E16\u754C&#39;</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// [ { label: &#39;\u4F60\u597D-hello&#39;, value: 0 }, { label: &#39;\u4E16\u754C-world&#39;, value: 1 } ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// --------- \u751F\u6210\u6307\u5B9A\u957F\u5EA6\u7684\u6570\u7EC4 -----------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">create_array</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">length</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">(length).</span><span style="color:#A6E22E;">fill</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> i)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">create_array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// [0,2,3,4,5,...,99]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">create_array</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">length</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">from</span><span style="color:#F8F8F2;">({length}, (</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> i)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">create_array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// [0,2,3,4,5,...,99]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ------------ \u5E8F\u5217\u751F\u6210\u5668 ---------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">range</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">start</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">stop</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">step</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">from</span><span style="color:#F8F8F2;">({length: (stop</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">start)</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">step </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}, (</span><span style="color:#FD971F;font-style:italic;">_</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> start </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> (i</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">step)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;range:&#39;</span><span style="color:#F8F8F2;"> ,</span><span style="color:#A6E22E;">range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;">// [1, 3, 5, 7, 9]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// -------- \u6392\u9664 falsy\u503C. Array.prototype.filter(Boolean) ---------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> has_virtual_item </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">undefined</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">123</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;\u4F60\u597D&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(has_virtual_item.</span><span style="color:#A6E22E;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Boolean</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;">// [ 123, &#39;hello&#39;, &#39;\u4F60\u597D&#39; ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="array-isarray" tabindex="-1"><a class="header-anchor" href="#array-isarray" aria-hidden="true">#</a> Array.isArray</h3><p>Array.isArray \u7528\u6765\u5224\u65AD\u53C2\u6570\u662F\u5426\u662F\u4E00\u4E2A\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> proxy_array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">],{})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">(proxy_array)) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(proxy_array.__proto__ </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.prototype)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(proxy_array </span><span style="color:#F92672;">instanceof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Array</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.prototype.toString.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(proxy_array))  </span><span style="color:#88846F;">// [object Array]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">.prototype)  </span><span style="color:#88846F;">// undefined</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// -------- \u5B9E\u73B0\u4E00\u4E2AArray.isArray ---------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">my_is_array1</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">arg</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> arg </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;object&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> arg </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> arg </span><span style="color:#F92672;">instanceof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Array</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">my_is_array2</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">arg</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.prototype.toString.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(arg).</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">,</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toLowerCase</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;array&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">my_is_array1</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]), </span><span style="color:#A6E22E;">my_is_array1</span><span style="color:#F8F8F2;">(proxy_array)) </span><span style="color:#88846F;">// true true</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">my_is_array2</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]), </span><span style="color:#A6E22E;">my_is_array2</span><span style="color:#F8F8F2;">(proxy_array)) </span><span style="color:#88846F;">// true true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="array-prototype-includes" tabindex="-1"><a class="header-anchor" href="#array-prototype-includes" aria-hidden="true">#</a> Array.prototype.includes</h3><p>Array.prototype.includes(searchElement, fromIndex) \u7528\u6765\u5224\u65AD\u6570\u7EC4\u662F\u5426\u5305\u542B\u6307\u5B9A\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">1. \u5982\u679Clength\u4E3A0, \u8FD4\u56DEfalse</span></span>
<span class="line"><span style="color:#88846F;">2. \u5982\u679Cn &lt; 0</span></span>
<span class="line"><span style="color:#88846F;">  2.1 k = length + n</span></span>
<span class="line"><span style="color:#88846F;">  2.2 \u5982\u679Ck\u8FD8\u662F\u5C0F\u4E8E 0, k = 0</span></span>
<span class="line"><span style="color:#88846F;">3. \u5982\u679Cn &gt; 0 k = n</span></span>
<span class="line"><span style="color:#88846F;">4. Infinity false</span></span>
<span class="line"><span style="color:#88846F;">5. -Infinity false</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> symbol </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Symbol</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;symbol&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">, symbol ,</span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;\u4F60\u597D&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> log </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> console.log</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">Infinity</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">Infinity</span><span style="color:#F8F8F2;">))   </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">))          </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">))         </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">))           </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">))           </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(symbol))           </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(array.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">))         </span><span style="color:#88846F;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u662F\u6570\u7EC4\u8FD8\u662F\u7C7B\u6570\u7EC4</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">isArrayLikeObject</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arr</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;object&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(arr </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> max_length </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">Math</span><span style="color:#F8F8F2;">.</span><span style="color:#66D9EF;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">53</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5224\u65AD\u662F\u5426\u6709length\u5C5E\u6027</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">!</span><span style="color:#66D9EF;font-style:italic;">Object</span><span style="color:#F8F8F2;">.prototype.hasOwnProperty.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(arr, </span><span style="color:#E6DB74;">&#39;length&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5224\u65ADlength \u662F\u5426\u4E3A number</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> arr.length </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;number&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5224\u65AD\u662F\u5426\u662F \u6709\u9650\u7684length</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">!</span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">isFinite</span><span style="color:#F8F8F2;">(arr.length)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5224\u65AD\u662F\u4E0D\u662F\u6570\u7EC4\u672C\u8EAB</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">(arr)) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(arr.length </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> arr.length </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> max_length) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  length: </span><span style="color:#E6DB74;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  age: </span><span style="color:#AE81FF;">30</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  length: </span><span style="color:#AE81FF;">Infinity</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> d </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  length: </span><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">isArrayLikeObject</span><span style="color:#F8F8F2;">(a)  </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#A6E22E;">isArrayLikeObject</span><span style="color:#F8F8F2;">(b)  </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#A6E22E;">isArrayLikeObject</span><span style="color:#F8F8F2;">(c)  </span><span style="color:#88846F;">// false</span></span>
<span class="line"><span style="color:#A6E22E;">isArrayLikeObject</span><span style="color:#F8F8F2;">(d)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#A6E22E;">isArrayLikeObject</span><span style="color:#F8F8F2;">(player) </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),e=[o];function F(c,r){return n(),a("div",null,e)}var i=s(p,[["render",F],["__file","code-snippet.html.vue"]]);export{i as default};
