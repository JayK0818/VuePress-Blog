import{_ as s,o as n,c as a,d as l}from"./app.7b5becf5.js";var e="/blog/assets/commander-opts.328b5ac9.png",p="/blog/assets/commander-no.d0fbd9bd.png";const o={},c=l(`<h1 id="commander" tabindex="-1"><a class="header-anchor" href="#commander" aria-hidden="true">#</a> Commander</h1><p>Commander\u662F\u4E00\u4E2ANode.js \u547D\u4EE4\u884C\u5DE5\u5177 (You write code to describe your command line interface)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">npm install commander</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { program } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;commander&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// For large programs which may use commander in multiple ways. it is better </span></span>
<span class="line"><span style="color:#88846F;">// to create a local Command object to use</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { Command } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;commander&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> program </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Command</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h2><p>\u5B9A\u4E49\u547D\u4EE4\u884C\u9009\u9879\u7684\u3002 options are defined with the .option() method. \u6BCF\u4E2A\u9009\u9879\u6709\u4E00\u4E2A\u77ED\u6807\u8BC6(single character) \u548C\u4E00\u4E2A\u957F\u7684\u540D\u5B57, \u901A\u8FC7\u9017\u53F7 \u6216\u8005\u7A7A\u683C &#39;|&#39; \u5206\u5272\u3002</p><p>\u591A\u4E2A\u8FDE\u8BCD\u7B26\u7EC4\u6210\u7684\u9009\u9879 \u5982:&#39;--template-engine&#39; \u4F1A\u8F6C\u6362\u6210\u9A7C\u5CF0\u547D\u540D. templateEngine</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">serve </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">p </span><span style="color:#AE81FF;">80</span></span>
<span class="line"><span style="color:#F8F8F2;">serve </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">p80</span></span>
<span class="line"><span style="color:#F8F8F2;">serve </span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">port </span><span style="color:#AE81FF;">80</span></span>
<span class="line"><span style="color:#F8F8F2;">serve </span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">port</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The two most used option types are a boolean option, and an option which takes its value from the following argument. Both are undefined unless specified on command line.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u6765\u81EA\u5B98\u65B9\u6587\u6863</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { program } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;commander&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// \u8BBE\u7F6E\u9009\u9879</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-d --debug&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;output extra debugging&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-s --small&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;small pizza size&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-p --pizza-type &lt;type&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;flavour of pizza&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(process.argv)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(program.</span><span style="color:#A6E22E;">opts</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#88846F;">// \u9ED8\u8BA4\u503C</span></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-c --color &lt;type&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;flavour of color&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;red&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="commander-opts"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">you can define a boolean option long name with a leading no- to set the option value</span></span>
<span class="line"><span style="color:#88846F;">to false when used.</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;--no-sauce&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;remove sauce&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;--no-cheese&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;plain with no cheese&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u5B9A\u4E49\u4E00\u4E2A\u5FC5\u9009\u9879</span></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-c --cheese &lt;type&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pizza must have cheese&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// node-cli   error: required option &#39;-c --cheese &lt;type&gt;&#39; not specified</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;">* you may make an option variadic by appending ... to the value placeholder when declaring the option.</span></span>
<span class="line"><span style="color:#88846F;">* On the command line you can then specify multiple option-arguments, and the parsed option value will</span></span>
<span class="line"><span style="color:#88846F;">* be an array.</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-n --number &lt;numbers...&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;specify number&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-l --letter [letters...]&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;specify letters&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+`" alt="commander-no"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// constructing an Option explicitly for less common cases.</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">addOption</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-t --timeout &lt;delay&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;timeout in seconds&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">default</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">60</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;one minute&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">addOption</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-d --drink &lt;size&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;drink size&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">choices</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;small&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;medium&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;large&#39;</span><span style="color:#F8F8F2;">]))</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">addOption</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-p --port &lt;number&gt;&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;port number&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">env</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;PORT&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(process.argv)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/* node-cli --drink huge</span></span>
<span class="line"><span style="color:#88846F;">option &#39;-d --drink &lt;size&gt;&#39; argument &#39;huge&#39; is invalid. Allowed choices are small, medium, large. */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">node-cli</span></span>
<span class="line"><span style="color:#88846F;">{ timeout: 60 }</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-option-processing" tabindex="-1"><a class="header-anchor" href="#custom-option-processing" aria-hidden="true">#</a> Custom option processing</h2><p>\u53EF\u4EE5\u5B9A\u4E49\u51FD\u6570\u7528\u6765\u8F6C\u6362\u4F20\u9012\u7684\u53C2\u6570(You may specify a function to to custom processing of option-arguments) This allows you to coerce the option-argument to the desired type, or accumulate values.</p><p>\u8BE5\u51FD\u6570\u63A5\u6536\u4E24\u4E2A\u53C2\u6570, \u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u547D\u4EE4\u884C\u53C2\u6570, \u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u5B9A\u4E49\u5728option\u91CC\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { program } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;program&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">_parseFloat</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">previous</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(value, previous) </span><span style="color:#88846F;">// 10 1</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">_parseInt</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">previous</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(value, previous)  </span><span style="color:#88846F;">// 10 10</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-f --float &lt;float&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;float argument&#39;</span><span style="color:#F8F8F2;">, _parseFloat, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-i --integer &lt;number&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;integer argument&#39;</span><span style="color:#F8F8F2;">, _parseInt, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(process.argv)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * node-cli -f 10  { float: 10 } </span></span>
<span class="line"><span style="color:#88846F;"> * node-cli -i 10  { integer: 10 }</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h2><p>You can specify (sub)commands using .command() or .addCommand().</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">command</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone &lt;source&gt; [destination]&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">description</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone a repository into a newly created directory&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">source</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">destination</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone command called&#39;</span><span style="color:#F8F8F2;">, source, destination)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">program.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(process.argv)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528.argument() \u65B9\u6CD5\u5236\u5B9A\u6BCF\u4E2A\u547D\u4EE4\u7684\u53C2\u6570</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">version</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;1.0.0&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;username&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;user to login&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;[password]&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;password for user, if requred&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;no password given&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">username</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;username&#39;</span><span style="color:#F8F8F2;">, username)</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;password&#39;</span><span style="color:#F8F8F2;">, password)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// node-cli jayk 123456</span></span>
<span class="line"><span style="color:#88846F;">// username: jayk</span></span>
<span class="line"><span style="color:#88846F;">// password: 123456</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u63A5\u6536\u4E00\u4E2A\u6570\u7EC4</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">version</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;1.0.0&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">command</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;rmdir&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;dirs...&gt;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">dirs</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  dirs.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">dir</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;rmdir %s&#39;</span><span style="color:#F8F8F2;">, dir)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-argument-processing" tabindex="-1"><a class="header-anchor" href="#custom-argument-processing" aria-hidden="true">#</a> Custom argument processing</h2><p>You may specify a function to do custom processing of command-arguments. The callback function receives two parameters, the user specified command-argument and the previous value for the argument. It returns the new value for the argument.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">_parseInt</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">previous</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(value, previous)  </span><span style="color:#88846F;">// hello  parseInt</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">_parseFloat</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">previous</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(value, previous)  </span><span style="color:#88846F;">// world  parseFloat</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">command</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;add&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;first&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;integer argument&#39;</span><span style="color:#F8F8F2;">, _parseInt, </span><span style="color:#E6DB74;">&#39;parseInt&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;second&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;integer argument&#39;</span><span style="color:#F8F8F2;">, _parseFloat, </span><span style="color:#E6DB74;">&#39;parseFloat&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">first</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">second</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">\`</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">first</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> - </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">second</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// node-cli add hello world</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u8F93\u51FA hello world</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="action-handler" tabindex="-1"><a class="header-anchor" href="#action-handler" aria-hidden="true">#</a> action handler</h2><p>You can specify (sub)commands using .command() or .addCommand(). There are two ways these can be implemented. using an action handler attached to the command,</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">In the first parameter to .command() you specify the command name. You may append the command-arguments</span></span>
<span class="line"><span style="color:#88846F;">after the command name, or specify them separately using .argument().</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">command</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone &lt;source&gt; [destination]&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">description</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone a repository into a newly created directory&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">source</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">destination</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone command called: &#39;</span><span style="color:#F8F8F2;">, source, destination)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">//\u7B49\u540C\u4E8E</span></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">command</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;source&gt;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&lt;destination&gt;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">description</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone a repository into a newly created directory&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">source</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">destination</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;clone command called: &#39;</span><span style="color:#F8F8F2;">, source, destination)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">program</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">argument</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-t --title &lt;title&gt;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;title to use before name&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">option</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-d --debug&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;display some debugging&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">action</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">options</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">command</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (options.debug) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(command.</span><span style="color:#A6E22E;">name</span><span style="color:#F8F8F2;">(), options)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> title </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> options.title </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> options.title </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">\`title: </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">title</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">name</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u6267\u884C node-cli hello --title=\u4F60\u597D -d</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">command.name() ---&gt; node-cli</span></span>
<span class="line"><span style="color:#88846F;">options: { title: &#39;\u4F60\u597D&#39;, debug: true }</span></span>
<span class="line"><span style="color:#88846F;">title: \u4F60\u597D, name: hello</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),r=[c];function i(t,F){return n(),a("div",null,r)}var d=s(o,[["render",i],["__file","commander.html.vue"]]);export{d as default};
