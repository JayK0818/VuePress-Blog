import{_ as p,o,c as r,b as s,a as l,e as n,d as e,r as c}from"./app.7b5becf5.js";var t="/blog/assets/nest-request.6dff458e.png";const F={},i=s("h1",{id:"nest",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#nest","aria-hidden":"true"},"#"),n(" Nest")],-1),y=s("p",null,"\u672C\u6587\u8BB0\u5F55\u4E00\u4E0B\u6309\u7167\u5B98\u65B9\u6587\u6863\u5B66\u4E60Nest\u7684\u8FC7\u7A0B\u3002",-1),d={href:"https://docs.nestjs.com/",target:"_blank",rel:"noopener noreferrer"},v=n("Nestjs\u5B98\u7F51"),u=s("p",null,"Nest\u4F7F\u7528\u88C5\u9970\u5668\u8BED\u6CD5,\u5E76\u4E14\u5185\u7F6E\u4E86\u4E00\u4E9B\u5217\u6709\u7528\u7684\u88C5\u9970\u5668 \u6BD4\u5982 @Request(), @Response() @Body() @Param() @Query()\u7B49\u3002",-1),m=s("p",null,"\u5B98\u7F51\u4E0A\u6709\u4E00\u6BB5\u5173\u4E8E\u88C5\u9970\u5668\u7684\u4ECB\u7ECD:",-1),E=s("p",null,[n("An ES2016 decorator is an expression which returns a function and can take a target, name and property descriptor as arguments. You apply it by prefixing the decorator with an "),s("strong",null,"@"),n(" character and placing this at the very top of what you are trying to decorate. Decorator can be defined for either a class, a method or a property.")],-1),b={href:"https://docs.nestjs.com/custom-decorators",target:"_blank",rel:"noopener noreferrer"},h=n("Nestjs Decorator"),f=e(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u5B89\u88C5nest \u811A\u624B\u67B6</span></span>
<span class="line"><span style="color:#F8F8F2;">npm i </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">g @nestjs</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">cli</span></span>
<span class="line"><span style="color:#F8F8F2;">nest </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> project</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">npm run start </span><span style="color:#88846F;">// \u4F1A\u5728\u672C\u5730\u542F\u52A8\u4E00\u4E2A3000\u7AEF\u53E3\u7684\u670D\u52A1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="controllers" tabindex="-1"><a class="header-anchor" href="#controllers" aria-hidden="true">#</a> Controllers</h2><p>Controllers are responsible for handling incoming requests and returning responses to the client\u3002 \u4F7F\u7528 @Controller() \u88C5\u9970\u5668\u5B9A\u4E49\u4E00\u4E2A\u63A7\u5236\u5668\u3002 \u6211\u4EEC\u53EF\u4EE5\u5728\u63A7\u5236\u5668\u4E2D\u6307\u5B9A\u4E00\u4E2A\u524D\u7F00\u7528\u6765\u7BA1\u7406\u4E00\u7CFB\u5217\u76F8\u5173\u7684\u8DEF\u7531\u3002</p><h3 id="routing" tabindex="-1"><a class="header-anchor" href="#routing" aria-hidden="true">#</a> Routing</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Controller, Get } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  host: </span><span style="color:#E6DB74;">&#39;192.168.0.588&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#88846F;">// \u5224\u65AD\u8BF7\u6C42\u662F\u5426\u6765\u81EA\u8FD9\u4E2A\u5730\u5740</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cats&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">CatsController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">()  </span><span style="color:#88846F;">// \u544A\u8BC9nest \u662F\u4E00\u4E2Aget\u8BF7\u6C42\u548C\u8DEF\u7531(\u8DEF\u7531\u662F\u7531\u63A7\u5236\u5668\u88C5\u9970\u5668\u7684\u8DEF\u7531\u524D\u7F00\u548C@Get()\u88C5\u9970\u5668\u7684\u8DEF\u5F84\u62FC\u63A5\u800C\u6210)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">findAll</span><span style="color:#F8F8F2;">()</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;This action returns all cats&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Nest\u63D0\u4F9B\u4E86\u5BF9\u5E94HTTP\u8BF7\u6C42\u65B9\u6CD5\u7684\u88C5\u9970\u5668 @Get, @Post, @Put, @Delete ... @All\u5305\u62EC\u524D\u8FF0\u6240\u6709\u65B9\u6CD5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>\u65B9\u6CD5\u6709\u65F6\u9700\u8981\u83B7\u53D6\u5230\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u8BE6\u7EC6\u4FE1\u606F\u3002Nest\u63D0\u4F9B\u4E00\u4E2A @Req \u88C5\u9970\u5668 \u7528\u6765\u83B7\u53D6\u8BF7\u6C42\u7684\u4FE1\u606F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Controller, Get, Req } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AppService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./app.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Request } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">readonly</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">appService</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppService</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">getHello</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Req</span><span style="color:#F8F8F2;">() </span><span style="color:#FD971F;font-style:italic;">request</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Request</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;request&#39;</span><span style="color:#F8F8F2;">, request);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.appService.</span><span style="color:#A6E22E;">getHello</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// \u4E3A\u4E86\u83B7\u53D6\u66F4\u597D\u7684express \u7C7B\u578B, \u5B89\u88C5 @types/express</span></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Request</span><span style="color:#88846F;">                     req</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Response</span><span style="color:#88846F;">                    res</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Session</span><span style="color:#88846F;">                     req.session</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Param</span><span style="color:#88846F;">                       req.params</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Body</span><span style="color:#88846F;">                        req.body</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Query</span><span style="color:#88846F;">                       req.query</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@Headers</span><span style="color:#88846F;">                     req.headers</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+t+`" alt="nest-request"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// app.controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Controller, Get, HttpCode, Header } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;nestjs/common&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/players&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">// \u901A\u8FC7get\u8BF7\u6C42 /api/players</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">HttpCode</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">)        </span><span style="color:#88846F;">// \u72B6\u6001\u7801</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Header</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Cache-Control&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;none&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">// \u54CD\u5E94\u5934</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Redirect</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;https://www.baidu.com&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">301</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// @Redirect takes two arguments url and statusCode.</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">getPlayers</span><span style="color:#F8F8F2;">() { </span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.appService.</span><span style="color:#A6E22E;">getPlayers</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// app.service.ts</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  firstName</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  lastName</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  id</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player_list</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;">[] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&#39;lebron&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&#39;james&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    id: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    id: </span><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Injectable } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;nestjs/common&#39;</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppSerivce</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">getPlayers</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> player_list</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u52A8\u6001\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u8DEF\u7531" aria-hidden="true">#</a> \u52A8\u6001\u8DEF\u7531</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// app.controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Controller, Get, Param } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;nestjs/common&#39;</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/players/:id&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// \u901A\u8FC7get\u8BF7\u6C42 /api/players/1  /api/players/2 ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">findPlayer</span><span style="color:#F8F8F2;"> (@</span><span style="color:#A6E22E;">Param</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.appService.</span><span style="color:#A6E22E;">findPlayer</span><span style="color:#F8F8F2;">(id)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u53E6\u4E00\u79CD\u5199\u6CD5,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">findPlayer</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Param</span><span style="color:#F8F8F2;">() </span><span style="color:#FD971F;font-style:italic;">params</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;params:&#39;</span><span style="color:#F8F8F2;">, params); </span><span style="color:#88846F;">// {id: 1}</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.appService.</span><span style="color:#A6E22E;">findPlayer</span><span style="color:#F8F8F2;">(params.id);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// app.service.ts</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppService</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">findPlayer</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player_list.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">player</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> player.id </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Number</span><span style="color:#F8F8F2;">(id))</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (player) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> player</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> Post</h3><p>\u4F7F\u7528post\u8BF7\u6C42\u524D\u9700\u8981\u5B9A\u4E49\u4E00\u4E2A DTO(Data Transfer Object) schema. \u662F\u4E00\u4E2A\u5BF9\u8C61\u7528\u6765\u5B9A\u4E49post\u8BF7\u6C42\u7684\u53C2\u6570\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Controller, Body, Post } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;nestjs/common&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">UserProps</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  username</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  password</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;text-decoration:underline;">Controller</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/login&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">userLogin</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Body</span><span style="color:#F8F8F2;">() </span><span style="color:#FD971F;font-style:italic;">user</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">UserProps</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.appService.</span><span style="color:#A6E22E;">userLogin</span><span style="color:#F8F8F2;">(user)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// app.service.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Injectable } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppService</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">userLogin</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">user</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">UserProps</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (user.username </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;jack&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> user.password </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;123456&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        code: </span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        message: </span><span style="color:#E6DB74;">&#39;success&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        code: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        message: </span><span style="color:#E6DB74;">&#39;error&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="provider" tabindex="-1"><a class="header-anchor" href="#provider" aria-hidden="true">#</a> Provider</h2><p>Controllers should handle HTTP requests and delegate more complex tasks to providers. Providers are plain JavaScript classes that are declared as providers in a module.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// player.interface.ts</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  firstName</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  lastName</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  age</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// player.controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Controller, Get, Post, Body } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">type</span><span style="color:#F8F8F2;"> { PlayerProps } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player.interface&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PlayerService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Controllers should handle HTTP request and delegate more complex tasks to providers.</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/player&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">readonly</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">playerService</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerService</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;create&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">create_player</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Body</span><span style="color:#F8F8F2;">() </span><span style="color:#FD971F;font-style:italic;">player</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.playerService.</span><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(player);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;find&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">get_player</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.playerService.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// player.service.ts</span></span>
<span class="line"><span style="color:#88846F;">// This service will be responsible for data storage and retrieval. and is designed to be </span></span>
<span class="line"><span style="color:#88846F;">// used by the PlayerController.</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Injectable } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">type</span><span style="color:#F8F8F2;"> { PlayerProps } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player.interface&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerService</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">readonly</span><span style="color:#F8F8F2;"> players</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;">[] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    { firstName: </span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">, lastName: </span><span style="color:#E6DB74;">&#39;irving&#39;</span><span style="color:#F8F8F2;">, age: </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">    { firstName: </span><span style="color:#E6DB74;">&#39;lebron&#39;</span><span style="color:#F8F8F2;">, lastName: </span><span style="color:#E6DB74;">&#39;james&#39;</span><span style="color:#F8F8F2;">, age: </span><span style="color:#AE81FF;">38</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  ];</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">player</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.players.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(player);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">()</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerProps</span><span style="color:#F8F8F2;">[] {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.players;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// app.module.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Module } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PlayerService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player/player.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AppService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./app.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Provider registration</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Module</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  imports: [],</span></span>
<span class="line"><span style="color:#F8F8F2;">  controllers: [PlayerController],</span></span>
<span class="line"><span style="color:#F8F8F2;">  providers: [PlayerService],</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppModule</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#88846F;">// A feature module simply organizes code relevant for a specific feature, keeping code</span></span>
<span class="line"><span style="color:#88846F;">// organized and establishing clear boundaries.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// player.module.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Module } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PlayerService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player/player.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PlayerController } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player/player.controller&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Module</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  controllers: [PlayerController],</span></span>
<span class="line"><span style="color:#F8F8F2;">  providers: [PlayerService],</span></span>
<span class="line"><span style="color:#88846F;">// we want to share an instance of the PlayerService between several other modules.</span></span>
<span class="line"><span style="color:#88846F;">// Then any module that imports the PlayerModule has access to the PlayerService and will share the same instance.</span></span>
<span class="line"><span style="color:#F8F8F2;">  exports: [PlayerService]</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerModule</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// app.module.ts</span></span>
<span class="line"><span style="color:#88846F;">// The last thing we need to do is import this module into the root module.</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PlayerModule } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player/player.module&#39;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Module } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Module</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  imports: [PlayerModule]</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware" aria-hidden="true">#</a> Middleware</h2><p>Middleware is a function which is called before the route handler. Middleware have access to the request and response objects.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// middleware/logger.middleware.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Injectable, NestMiddleware } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Request, Response, NextFunction } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">LoggerMiddleware</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">NestMiddleware</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Request</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Response</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">NextFunction</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;request...&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Applying middleware</span></span>
<span class="line"><span style="color:#88846F;">// app.module.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Module, NestModule, MiddlewareConsumer } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { LoggerMiddleware } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./middleware/logger.middleware&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AppModule</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">NestModule</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">configure</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">consumer</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">MiddlewareConsumer</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// set up the LoggerMiddleware for the /api/player route.</span></span>
<span class="line"><span style="color:#F8F8F2;">    consumer.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(LoggerMiddleware).</span><span style="color:#A6E22E;">forRoutes</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;api/player&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// \u53E6\u4E00\u79CD\u5199\u6CD5</span></span>
<span class="line"><span style="color:#F8F8F2;">    consumer.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(LoggerMiddleware).</span><span style="color:#A6E22E;">forRoutes</span><span style="color:#F8F8F2;">(PlayerController);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u5C06class middleware \u8F6C\u6362\u4E3A functional middleware.</span></span>
<span class="line"><span style="color:#88846F;">// middleware/logger.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Request, Response, NextFunction } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;express&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">logger</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">req</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Request</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Response</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">NextFunction</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;request...&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// app.module.ts</span></span>
<span class="line"><span style="color:#F8F8F2;">consumer.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(logger).</span><span style="color:#A6E22E;">forRoutes</span><span style="color:#F8F8F2;">(PlayerController)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Multiple middleware</span></span>
<span class="line"><span style="color:#F8F8F2;">consumer.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">cors</span><span style="color:#F8F8F2;">(), </span><span style="color:#A6E22E;">helmet</span><span style="color:#F8F8F2;">(), logger).</span><span style="color:#A6E22E;">forRoutes</span><span style="color:#F8F8F2;">(PlayerController);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// global middleware</span></span>
<span class="line"><span style="color:#88846F;">// main.ts</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> NestFactory.</span><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(AppModule);</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(logger);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exception" tabindex="-1"><a class="header-anchor" href="#exception" aria-hidden="true">#</a> Exception</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// Throwing standard exceptions</span></span>
<span class="line"><span style="color:#88846F;">// Nest provides a build-in HttpException class exposed from the &#39;@nestjs/common&#39; package.</span></span>
<span class="line"><span style="color:#88846F;">// player.controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { HttpStatus } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">async </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">HttpException</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Forbidden&#39;</span><span style="color:#F8F8F2;">, HttpStatus.FORBIDDEN);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The HttpException constructor takes two required arguments which determine the response:</p><ol><li>The response argument defines the JSON response body.</li><li>The status argument defines the HTTP status code.</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// overriding the entire response body:</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">async </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">HttpException</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">    status: HttpStatus.FORBIDDEN,</span></span>
<span class="line"><span style="color:#F8F8F2;">    error: </span><span style="color:#E6DB74;">&#39;This is a custom message&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, HttpStatus.FORBIDDEN)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u81EA\u5B9A\u4E49\u5F02\u5E38</span></span>
<span class="line"><span style="color:#88846F;">// forbidden.exception.ts</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ForbiddenException</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">HttpException</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">super</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Forbidden&#39;</span><span style="color:#F8F8F2;">, HttpStatus.FORBIDDEN)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// player.controller.ts</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">async </span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ForbiddenException</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pipe" tabindex="-1"><a class="header-anchor" href="#pipe" aria-hidden="true">#</a> Pipe</h2><p>Pipes have two typical use cases:</p><ol><li>transformation: transform input data to the desired form;</li><li>validation: evaluate input data and if valid, simply pass it through unchanged;</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Get, Param, Controller, ParseIntPipe, Query } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;api/player&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">readonly</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">playerService</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerService</span><span style="color:#F8F8F2;">){};</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/search/:id&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5C06\u53C2\u6570 id \u7531\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u5B57</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Param</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">, ParseIntPipe) </span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.playerService.</span><span style="color:#A6E22E;">findPlayer</span><span style="color:#F8F8F2;">(id)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Param</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ParseIntPipe</span><span style="color:#F8F8F2;">({errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE})),id:number) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;font-style:italic;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#FD971F;font-style:italic;">playerService</span><span style="color:#F8F8F2;">.</span><span style="color:#FD971F;font-style:italic;">findPlayer</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;query&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FD971F;font-style:italic;">search</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Query</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">, ParseIntPipe) </span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.playerService.</span><span style="color:#A6E22E;">search_player</span><span style="color:#F8F8F2;">(id);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>ValidatonPipe</li><li>ParseIntPipe</li><li>ParseFloatPipe</li><li>ParseBoolPipe</li><li>ParseArrayPipe</li><li>ParseUUIDPipe</li><li>PaeseEnumPipe</li></ol><p>They are exported from the @nestjs/common package.</p><h3 id="custom-pipes" tabindex="-1"><a class="header-anchor" href="#custom-pipes" aria-hidden="true">#</a> Custom Pipes</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// player.validation.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PipeTransform, Injectable, ArgumentMetadata } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PlayerValidationPipe</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">PipeTransform</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">transform</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">metadata</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ArgumentMetadata</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">PipeTransform&lt;T, R&gt; // T \u8868\u793A\u8F93\u5165\u7684value\u7C7B\u578B, R \u8868\u660Evalue\u8FD4\u56DE\u7684\u6570\u636E\u7C7B\u578B</span></span>
<span class="line"><span style="color:#88846F;">\u81EA\u5B9A\u4E49pipe\u9A8C\u8BC1\u5668\u5FC5\u987B\u5B9E\u73B0\u4E00\u4E2Atransform()\u65B9\u6CD5\u3002</span></span>
<span class="line"><span style="color:#88846F;">\u8BE5\u65B9\u6CD5\u6709\u4E24\u4E2A\u53C2\u6570 value, metadata.</span></span>
<span class="line"><span style="color:#88846F;">1. value: \u5F53\u524D\u63A5\u6536\u5230\u7684\u6570\u636E</span></span>
<span class="line"><span style="color:#88846F;">2. metadata: {</span></span>
<span class="line"><span style="color:#88846F;">  type: &#39;body&#39; | &#39;query&#39; | &#39;param&#39; | &#39;custom&#39;, \u8868\u660E\u5F53\u524D\u53C2\u6570\u7C7B\u578B</span></span>
<span class="line"><span style="color:#88846F;">  metatype?: Type&lt;unknow&gt;,</span></span>
<span class="line"><span style="color:#88846F;">  data?: string  \u4F20\u9012\u7ED9\u88C5\u9970\u5668\u7684\u53C2\u6570</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// player.controller.ts</span></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;search/:id&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#A6E22E;">search_player</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Param</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">, PlayerValidationPipe) id) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.playerService.</span><span style="color:#A6E22E;">search_player</span><span style="color:#F8F8F2;">(id)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="schema-validation" tabindex="-1"><a class="header-anchor" href="#schema-validation" aria-hidden="true">#</a> Schema validation</h3><p>The Joi library allows you to create schemas in a straightforward way.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">npm install </span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">save joi</span></span>
<span class="line"><span style="color:#F8F8F2;">npm install </span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">save</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">dev @types</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">joi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,39),D={href:"https://joi.dev/api/?v=17.6.0",target:"_blank",rel:"noopener noreferrer"},A=n("Joi"),g=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// player.validation.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { ObjectSchema } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;joi&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { PipeTransform, Injectable, BadRequestException } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">CreatePlayerValidation</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">PipeTransform</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">schema</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ObjectSchema</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">transform</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">  If the input is valid, then the error will be undefined. If the input is invalid, error</span></span>
<span class="line"><span style="color:#88846F;">  is assigned a ValidationError object providing more information.</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { error } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.schema.</span><span style="color:#A6E22E;">validate</span><span style="color:#F8F8F2;">(value)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (error) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">BadRequestException</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Validation failed&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> value;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// player.controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { UsePipes } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { CreatePlayerValidation } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./player.validation&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Joi </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;joi&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// \u63A5\u6536\u5230\u521B\u5EFA\u4E00\u4E2A\u7403\u5458\u6570\u636E\u7684\u9A8C\u8BC1\u5668</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> createPlayerSchema </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Joi.</span><span style="color:#A6E22E;">object</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  firstName: Joi.</span><span style="color:#A6E22E;">string</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">  lastName: Joi.</span><span style="color:#A6E22E;">string</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">  id: Joi.</span><span style="color:#A6E22E;">number</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">  age: Joi.</span><span style="color:#A6E22E;">number</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#88846F;">//...</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;create&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">UsePipes</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CreatePlayerValidation</span><span style="color:#F8F8F2;">(createPlayerSchema))</span></span>
<span class="line"><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Body</span><span style="color:#F8F8F2;">() player: PlayerProps) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.playerService.</span><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(player)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interceptors" tabindex="-1"><a class="header-anchor" href="#interceptors" aria-hidden="true">#</a> Interceptors</h2><p>Interceptors have a set of useful capabilities, They make it possible to:</p><ol><li>bind extra logic before/after method execution</li><li>transform the result returned from a function</li><li>transform the exception thrown from a function</li><li>extend the basic function behavior</li><li>completely override a function depending on specfic conditions.</li></ol><p>\u6BCF\u4E00\u4E2A\u62E6\u622A\u5668\u9700\u8981\u5B9E\u73B0intercept()\u65B9\u6CD5, \u8BE5\u65B9\u6CD5\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570. \u7B2C\u4E00\u4E2A\u53C2\u6570\u662FExecutionContext, \u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2ACallHandler, \u8BE5\u63A5\u53E3\u5B9E\u73B0\u4E86\u4E00\u4E2Ahandle() \u65B9\u6CD5, \u53EF\u4EE5\u5728\u67D0\u4E2A\u8282\u70B9\u6267\u884C\u8BE5\u51FD\u6570\u3002\u5982\u679C\u4E0D\u6267\u884Chandle(), \u90A3\u4E48\u8DEF\u7531\u5C06\u4E0D\u4F1A\u88AB\u6267\u884C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// login.interceptors.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Injectable, NestInterceptor, ExecutionContext, Callhandler } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">LoginInterceptor</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">NestInterceptor</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">intercept</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">context</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ExecutionContext</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Callhandler</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;before...&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">Date</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">now</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> next.</span><span style="color:#A6E22E;">handle</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// handle() returns an Rxjs Observable.</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// login.controller.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { UseInterceptors } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">UseInterceptors</span><span style="color:#F8F8F2;">(LoginInterceptor)</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">LoginController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u62E6\u622A\u5668\u4F1A\u88AB\u63A7\u5236\u5668\u91CC\u7684\u6BCF\u4E2A\u8BF7\u6C42\u6267\u884C\u3002\u5982\u679C\u60F3\u9650\u5236\u62E6\u622A\u5668\u5728\u67D0\u4E2A\u6307\u5B9A\u7684\u8BF7\u6C42\u6267\u884C, \u5C06\u6CE8\u5165\u63A7\u5236\u5668\u5199\u5728\u8BE5\u51FD\u6570\u7684\u4E0A\u65B9\u3002 (As mentioned, the construction above attaches the interceptor to every handler declared by this controller. If we want to restrict the interceptor&#39;s scope to a single method, we simply apply the decorator at the method level)</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u89C9\u5F97\u6BD4\u8F83\u6709\u7528\u7684\u62E6\u622A\u5668 (\u6765\u81EA\u5B98\u7F51)</span></span>
<span class="line"><span style="color:#88846F;">// 1. \u62E6\u622A\u54CD\u5E94, \u5C06\u8FD4\u56DE\u7684\u6570\u636E \u6302\u8F7D\u5230\u4E00\u4E2A\u5BF9\u8C61\u7684 data\u5C5E\u6027\u4E0B</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">TransformInterceptor</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">NestInterceptor</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">interceptor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">context</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ExecutionContext</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">CallHandler</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> next.</span><span style="color:#A6E22E;">handle</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">data</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({ data })))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">\u5F53\u901A\u8FC7get\u6216post\u8BF7\u6C42\u65F6, \u8FD4\u56DE\u7684\u7ED3\u679C \u5927\u6982\u662F\u8FD9\u6837\u7684: { &#39;data&#39;: [] }</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 2. \u5C06null\u8F6C\u6362\u4E3A\u7A7A\u5B57\u7B26\u4E32</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ExcludeNullInterceptor</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">NestInterceptor</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">interceptor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">context</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ExecutionContext</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">CallHandler</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> next.</span><span style="color:#A6E22E;">handle</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> value))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dynamic-modules" tabindex="-1"><a class="header-anchor" href="#dynamic-modules" aria-hidden="true">#</a> Dynamic modules</h2><p>dynamic modules provide an API for importing one module into another, and customizing the properties and behavior of that module when it is importer.</p><p>\u4E0B\u9762\u662F\u5B98\u7F51\u7684\u4E00\u4E2A\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// User</span></span>
<span class="line"><span style="color:#88846F;">// user.service.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Injectable, Inject } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { INQUIRER } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/core&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">UserService</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> user_list</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#88846F;">// If you want to get the class where a provider was consturcted, you can inject the INQUIRER token.</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Inject</span><span style="color:#F8F8F2;">(INQUIRER) </span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">parentClass</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">object</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.user_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;kyrie&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;lebron&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;kevin&#39;</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">check</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">username</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">\`</span><span style="color:#F92672;">\${</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.parentClass?.constructor?.name</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;">// AuthService</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.user_list.</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(username);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// user.module.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Module } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { UserService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./user.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Module</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  providers: [UserService],</span></span>
<span class="line"><span style="color:#F8F8F2;">  exports: [UserService],</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">UserModule</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// Auth</span></span>
<span class="line"><span style="color:#88846F;">// auth.controller.ts</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api/auth&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AuthController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">readonly</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">authService</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AuthService</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"><span style="color:#F8F8F2;">  @</span><span style="color:#A6E22E;">Post</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;login&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">login</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Body</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;username&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FD971F;font-style:italic;">username</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.authService.</span><span style="color:#A6E22E;">login</span><span style="color:#F8F8F2;">(username);  </span><span style="color:#88846F;">// \u9A8C\u8BC1\u7528\u6237\u540D\u662F\u5426\u5B58\u50A8</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// auth.module.ts</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Module } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@nestjs/common&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AuthController } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./auth.controller&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AuthService } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./auth.service&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { UserModule } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../user/user.module&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Module</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  imports: [UserModule], </span><span style="color:#88846F;">// These constructs allow us to inject UserService in.</span></span>
<span class="line"><span style="color:#F8F8F2;">  providers: [AuthService],</span></span>
<span class="line"><span style="color:#F8F8F2;">  controllers: [AuthController],</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AuthModule</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// auth.service.ts</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Injectable</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">AuthService</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">userService</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">UserService</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">login</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">username</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> flag </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.userService.</span><span style="color:#A6E22E;">check</span><span style="color:#F8F8F2;">(username);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (flag) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        code: </span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        success: </span><span style="color:#E6DB74;">&#39;\u767B\u5F55\u6210\u529F&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      code: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      success: </span><span style="color:#E6DB74;">&#39;\u7528\u6237\u540D\u4E0D\u5B58\u5728&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function x(P,B){const a=c("ExternalLinkIcon");return o(),r("div",null,[i,y,s("p",null,[s("a",d,[v,l(a)])]),u,m,E,s("p",null,[s("a",b,[h,l(a)])]),f,s("p",null,[s("a",D,[A,l(a)])]),g])}var w=p(F,[["render",x],["__file","nest.html.vue"]]);export{w as default};
