import{_ as e,r as p,o as t,c as F,b as s,a as l,e as o,d as a}from"./app.cae4c64a.js";var c="/blog/assets/promise.then.622ba867.png",r="/blog/assets/promise-procedure.ff984302.png";const i={},y=o(`<h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h1><p>Promise\u5BF9\u8C61\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570,\u7528\u6765\u751F\u6210Promise\u5B9E\u4F8B\u3002\u7528\u4E8E\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u6700\u7EC8\u5B8C\u6210(\u6216\u5931\u8D25)\u53CA\u5176\u7ED3\u679C\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u57FA\u672C\u7528\u6CD5</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#88846F;">/*\u6210\u529F\u7684\u4EE3\u7801*/</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(value)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(error)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7EA6\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u7EA6\u5B9A" aria-hidden="true">#</a> \u7EA6\u5B9A</h2><ol><li>\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u5B8C\u6210\u4E4B\u524D(\u5FAE\u4EFB\u52A1\u9636\u6BB5\u6267\u884C),\u56DE\u8C03\u51FD\u6570\u662F\u4E0D\u4F1A\u88AB\u8C03\u7528\u7684\u3002</li><li>\u5373\u4F7F\u5F02\u6B65\u64CD\u4F5C\u5DF2\u7ECF\u5B8C\u6210(\u6210\u529F\u6216\u8005\u5931\u8D25),\u5728\u8FD9\u4E4B\u540E\u901A\u8FC7then()\u6DFB\u52A0\u7684\u56DE\u8C03\u51FD\u6570\u4E5F\u4F1A\u88AB\u8C03\u7528\u3002</li><li>\u901A\u8FC7\u591A\u6B21\u8C03\u7528then() \u53EF\u4EE5\u6DFB\u52A0\u591A\u4E2A\u56DE\u8C03\u51FD\u6570,\u4ED6\u4EEC\u4F1A\u6309\u7167\u63D2\u5165\u987A\u5E8F\u6267\u884C\u3002</li><li>.then()\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2Apromise</li></ol>`,5),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises",target:"_blank",rel:"noopener noreferrer"},v=a("MDN-promise\u5BF9\u8C61"),m={href:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"},E=a("PromiseA+\u89C4\u8303"),u=o(`<h2 id="promise\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#promise\u72B6\u6001" aria-hidden="true">#</a> Promise\u72B6\u6001</h2><p>A promise must be in one of three states: pending, fulfilled, or rejected.</p><p><strong>Pending</strong>:</p><ol><li>may transition to either the fulfilled or rejected state</li><li>resolve -&gt; fulfilled</li><li>reject -&gt; rejected</li></ol><p><strong>Fulfilled</strong>:</p><ol><li>\u88ABresolve\u4E4B\u540E\u7684\u72B6\u6001</li><li>must have a value, which must not change 2.1 value is any legal JavaScript value(including undefined, a thenable or a promise)</li></ol><p><strong>Rejected</strong>:</p><ol><li>promise\u88ABreject\u4E4B\u540E\u7684\u72B6\u6001</li><li>must have a reason, which must not change 2.1 reason is a value that indicated why a promise was rejected.</li></ol><h2 id="\u5728\u65E7\u5F0F\u56DE\u8C03api\u521B\u5EFApromise" tabindex="-1"><a class="header-anchor" href="#\u5728\u65E7\u5F0F\u56DE\u8C03api\u521B\u5EFApromise" aria-hidden="true">#</a> \u5728\u65E7\u5F0F\u56DE\u8C03API\u521B\u5EFAPromise</h2><p>\u53EF\u4EE5\u901A\u8FC7Promise\u7684\u6784\u9020\u5668\u4ECE0\u5F00\u59CB\u521B\u5EFAPromise,\u8FD9\u79CD\u65B9\u5F0F\u5E94\u5F53\u53EA\u5728\u5C01\u88C5\u65E7API\u7684\u65F6\u5019\u7528\u5230\u3002\u7406\u60F3\u72B6\u6001\u4E0B,\u6240\u6709\u7684\u5F02\u6B65\u51FD\u6570\u90FD\u5DF2\u7ECF\u8FD4\u56DEPromise\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">wait</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">ms</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(resolve,ms))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="promise\u6267\u884C\u65F6\u5E8F" tabindex="-1"><a class="header-anchor" href="#promise\u6267\u884C\u65F6\u5E8F" aria-hidden="true">#</a> Promise\u6267\u884C\u65F6\u5E8F</h2><p>\u5373\u4F7F\u4E00\u4E2A\u5DF2\u7ECF\u53D8\u6210resolve\u72B6\u6001\u7684Promise,\u4F20\u9012\u7ED9then()\u7684\u51FD\u6570\u4E5F\u603B\u662F\u4F1A\u88AB\u5F02\u6B65\u8C03\u7528. \u4F20\u5165\u5230then()\u4E2D\u7684\u51FD\u6570\u88AB\u653E\u5165\u5230\u4E00\u4E2A\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\u3002 \u800C\u4E0D\u662F\u7ACB\u5373\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">wait</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">ms</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(resolve, ms));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">wait</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 1, 2, 3, 4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-prototype-then" tabindex="-1"><a class="header-anchor" href="#promise-prototype-then" aria-hidden="true">#</a> Promise.prototype.then</h2><p>A promise must provide a then method to access its current or eventual value or reason. A promise&#39;s then method accepts two arguments:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> promise.</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(onFulfilled, onRejected)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+c+`" alt="Promise.prototype.then"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> promise1</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> promise2</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> promise3</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// \u4F9D\u6B21\u8F93\u51FA hello world !</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="The Promise Resolution Procedure"></p><h2 id="promise-prototype-catch" tabindex="-1"><a class="header-anchor" href="#promise-prototype-catch" aria-hidden="true">#</a> Promise.prototype.catch</h2><p>Promise.prototype.catch()\u65B9\u6CD5\u662F .then(null,rejection) \u6216 .then(undefined,rejection)\u7684\u522B\u540D\u3002 then\u65B9\u6CD5\u4E2D\u629B\u51FA\u7684\u5F02\u5E38\u4E5F\u4F1A\u88AB catch\u6240\u6355\u83B7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u6355\u83B7promise\u629B\u51FA\u7684\u9519\u8BEF</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Error</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;fail&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">result</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">catch</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(err)  </span><span style="color:#88846F;">// Error fail</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// \u6355\u83B7then\u65B9\u6CD5\u4E2D\u629B\u51FA\u7684\u9519\u8BEF</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Error</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;fail again&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">catch</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">error</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(error)  </span><span style="color:#88846F;">// fail again</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u822C\u6765\u8BF4,\u4E0D\u8981\u5728then()\u65B9\u6CD5\u91CC\u9762\u5B9A\u4E49reject\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570(\u5373then\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570),\u603B\u662F\u4F7F\u7528catch\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;ok&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;value:&#39;</span><span style="color:#F8F8F2;">,v)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Error</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u54C8\u54C8\u54C8\u54C8&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">},(</span><span style="color:#FD971F;font-style:italic;">error</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u6355\u83B7\u5230\u4E86\u9519\u8BEF\u5417?:&#39;</span><span style="color:#F8F8F2;">,error)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">catch</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">error</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u6355\u83B7\u5230\u4E86\u9519\u8BEF\u5417?:&#39;</span><span style="color:#F8F8F2;">,error)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// \u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D,then\u7684\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570\u65E0\u6CD5\u6355\u83B7 resolve\u72B6\u6001\u91CC\u7684\u9519\u8BEF\u3002</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise\u5BF9\u8C61\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u4F20\u9012\u5230\u4EE3\u7801\u5916\u5C42,\u4E0D\u4F1A\u9000\u51FA\u8FDB\u7A0B\u7EC8\u6B62\u811A\u672C\u6267\u884C\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">foo</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(x </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">foo</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;everything is great&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)},</span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// Uncaught (in promise) ReferenceError: x is not defined</span></span>
<span class="line"><span style="color:#88846F;">// 123</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-prototype-finally" tabindex="-1"><a class="header-anchor" href="#promise-prototype-finally" aria-hidden="true">#</a> Promise.prototype.finally</h2><p>\u8BE5\u65B9\u6CD5\u662FES2018\u5F15\u5165\u6807\u51C6\u7684, \u4E0D\u7BA1promise\u5BF9\u8C61\u6700\u540E\u7684\u72B6\u6001\u5982\u4F55\u90FD\u4F1A\u6267\u884C\u7684\u64CD\u4F5C\u3002 finally\u8FD4\u56DE\u7684\u662F\u4E00\u4E2Apromise\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// finally\u7684\u5B9E\u73B0\u65B9\u5F0F</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.prototype.</span><span style="color:#A6E22E;">finally</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">callback</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">callback</span><span style="color:#F8F8F2;">()).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> value),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">callback</span><span style="color:#F8F8F2;">()).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Error</span><span style="color:#F8F8F2;">(err)})</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">all</span><span style="color:#F8F8F2;">([p1,p2,p3])</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570,p1 p2 p3\u90FD\u662FPromise\u5B9E\u4F8B,\u5982\u679C\u4E0D\u662F,\u5219\u4F1A\u8C03\u7528Promise.resolve()\u65B9\u6CD5\u3002</p><ol><li>\u53EA\u6709\u6570\u7EC4\u91CC\u7684\u6240\u6709promise\u72B6\u6001\u90FD\u53D8\u4E3Afulfiller, p\u7684\u72B6\u6001\u624D\u4F1A\u53D8\u6210fulfilled\u3002</li><li>\u6709\u4E00\u4E2Apromise\u5B9E\u4F8B\u88ABreject,\u5219\u7B2C\u4E00\u4E2A\u88ABreject\u7684\u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\u56DE\u4F20\u9012\u7ED9p\u7684\u56DE\u8C03\u51FD\u6570\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">all</span><span style="color:#F8F8F2;">([promise1,promise2]).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">result</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(result);  </span><span style="color:#88846F;">// [&#39;hello&#39;,&#39;world&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> Promise.race</h2><p>\u53EA\u8981\u5176\u4E2D\u4E00\u4E2A\u5B9E\u4F8B\u7387\u5148\u6539\u53D8\u72B6\u6001,p\u7684\u72B6\u6001\u5C31\u8DDF\u7740\u6539\u53D8\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">race</span><span style="color:#F8F8F2;">([p1, p2, p3]);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span><span style="color:#AE81FF;">3000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u8BF7\u6C42\u8D85\u65F6&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span><span style="color:#AE81FF;">2000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">race</span><span style="color:#F8F8F2;">([promise3,promise4]).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">catch</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise.all() \u548C Promise.race()\u65B9\u6CD5\u63A5\u53D7\u7684\u90FD\u662F\u4E00\u4E2A promise\u7684iterable\u7C7B\u578B\u7684\u8F93\u5165,\u5E76\u4E14\u53EA\u8FD4\u56DE\u4E00\u4E2APromise\u5B9E\u4F8B\u3002</p></div><h2 id="promise-allsettled" tabindex="-1"><a class="header-anchor" href="#promise-allsettled" aria-hidden="true">#</a> Promise.allSettled</h2><p>Promise.allSettled \u65B9\u6CD5\u63A5\u6536\u4E00\u7EC4promise\u5B9E\u4F8B\u4F5C\u4E3A\u53C2\u6570\u3002\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684Promise\u5B9E\u4F8B\u3002 \u4E0D\u7BA1\u662Ffulfilled \u8FD8\u662F rejected\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">allSettled</span><span style="color:#F8F8F2;">([promise3,promise4]).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// [</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">//   { status: &#39;fulfilled&#39;, value: &#39;hello world&#39; },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">//   { status: &#39;rejected&#39;, reason: &#39;\u8BF7\u6C42\u8D85\u65F6&#39; }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// ]</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5BF9Promise.allSettled \u7684\u5B9E\u73B0</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// Promise.allSettled\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002\u6BCF\u4E2A\u6210\u5458\u90FD\u662FPromise\u3002</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">has_iterator</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">data</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> data[</span><span style="color:#66D9EF;font-style:italic;">Symbol</span><span style="color:#F8F8F2;">.iterator] </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;function&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">allSettled</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">promiseArray</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">!</span><span style="color:#A6E22E;">has_iterator</span><span style="color:#F8F8F2;">(promiseArray)){</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">TypeError</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u53C2\u6570\u6CA1\u6709iterator\u63A5\u53E3&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> temp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> count </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> promise </span><span style="color:#F92672;">of</span><span style="color:#F8F8F2;"> promiseArray){</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(promise).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        temp.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">          status:</span><span style="color:#E6DB74;">&#39;fulfilled&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">          value:v</span></span>
<span class="line"><span style="color:#F8F8F2;">        })</span></span>
<span class="line"><span style="color:#F8F8F2;">      }).</span><span style="color:#A6E22E;">catch</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        temp.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">          status:</span><span style="color:#E6DB74;">&#39;rejected&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">          reason: err</span></span>
<span class="line"><span style="color:#F8F8F2;">        })</span></span>
<span class="line"><span style="color:#F8F8F2;">      }).</span><span style="color:#A6E22E;">finally</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        count </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(count </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> promiseArray.length ){</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(temp)</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// \u6D4B\u8BD5 </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;p1&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;p2&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, </span><span style="color:#AE81FF;">2000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;error&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">allSettled</span><span style="color:#F8F8F2;">([p1,p2,p3]).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;allSettled-value:&#39;</span><span style="color:#F8F8F2;">, v)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">   [</span></span>
<span class="line"><span style="color:#88846F;">    { status: &#39;fulfilled&#39;, value: &#39;p1&#39; },</span></span>
<span class="line"><span style="color:#88846F;">    { status: &#39;rejected&#39;, reason: &#39;error&#39; },</span></span>
<span class="line"><span style="color:#88846F;">    { status: &#39;fulfilled&#39;, value: &#39;p2&#39; }</span></span>
<span class="line"><span style="color:#88846F;">  ]</span></span>
<span class="line"><span style="color:#88846F;">  */</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-resolve" tabindex="-1"><a class="header-anchor" href="#promise-resolve" aria-hidden="true">#</a> Promise.resolve</h2><p>\u5C06\u73B0\u6709\u5BF9\u8C61\u8F6C\u4E3APromise\u5BF9\u8C61\u3002</p><ol><li>\u53C2\u6570\u662F\u4E00\u4E2Apromise\u5B9E\u4F8B,\u90A3\u4E48Promise.resolve\u5C06\u4E0D\u4F1A\u505A\u4EFB\u4F55\u4FEE\u6539 \u539F\u5C01\u4E0D\u52A8\u7684\u8FD4\u56DE\u8FD9\u4E2A\u5B9E\u4F8B</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(promise5)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(promise1 </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> promise2)  </span><span style="color:#88846F;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>promise.then()\u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684promise\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> promise2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(promise1).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(promise1 </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> promise2)  </span><span style="color:#88846F;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u53C2\u6570\u662F\u4E00\u4E2Athenable\u5BF9\u8C61 (\u8BE5\u5BF9\u8C61\u5177\u6709then\u65B9\u6CD5)</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> thenable </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">42</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u53C2\u6570\u4E0D\u662F\u5177\u6709then\u65B9\u6CD5\u7684\u5BF9\u8C61,\u6216\u8005\u6839\u672C\u5C31\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)}) </span><span style="color:#88846F;">// true</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)})  </span><span style="color:#88846F;">// hello world</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">123</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)})  </span><span style="color:#88846F;">// 123</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">({}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)}) </span><span style="color:#88846F;">// {}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">([]).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)}) </span><span style="color:#88846F;">// []</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">undefined</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)})  </span><span style="color:#88846F;">// undefined</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)}) </span><span style="color:#88846F;">// null</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Symbol</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;foo&#39;</span><span style="color:#F8F8F2;">)).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)})  </span><span style="color:#88846F;">// Symbol(&#39;foo&#39;)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {}).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(v)}) </span><span style="color:#88846F;">//[Function (anonymous)]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u4E0D\u5E26\u6709\u4EFB\u4F55\u53C2\u6570 Promise.resolve()\u65B9\u6CD5\u5141\u8BB8\u8C03\u7528\u65F6\u4E0D\u5E26\u53C2\u6570,\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2Aresolved\u72B6\u6001\u7684Promise\u5BF9\u8C61</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global start&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;world&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">},</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">v</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global end&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// \u8F93\u51FA\u987A\u5E8F\u4E3A  global start -- global end -- hello -- world</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise.resolve() \u662F\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7ED3\u675F\u65F6\u6267\u884C, \u800C\u4E0D\u662F\u5728\u4E0B\u4E00\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u5F00\u59CB\u6267\u884C</p></div><h2 id="promise-reject" tabindex="-1"><a class="header-anchor" href="#promise-reject" aria-hidden="true">#</a> Promise.reject</h2><p>Promise.reject(reason)\u65B9\u6CD5\u4E5F\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u7684\u72B6\u6001\u4E3Arejected</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u51FA\u9519\u4E86&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// \u7B49\u540C\u4E8E</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">reject</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u51FA\u9519\u4E86&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">p.</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">s</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(s)</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61),b={href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"},f=a("ES6-promise"),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver",target:"_blank",rel:"noopener noreferrer"},D=a("MutationObserver"),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTML_DOM_API/Microtask_guide/In_depth",target:"_blank",rel:"noopener noreferrer"},A=a("\u5B8F\u4EFB\u52A1\u4E0E\u5FAE\u4EFB\u52A1"),P=o(`<h2 id="\u4E00\u4E2A\u6709\u7528\u7684\u9644\u52A0\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u6709\u7528\u7684\u9644\u52A0\u65B9\u6CD5" aria-hidden="true">#</a> \u4E00\u4E2A\u6709\u7528\u7684\u9644\u52A0\u65B9\u6CD5</h2><p>\u65E0\u8BBAPromise\u5BF9\u8C61\u7684\u56DE\u8C03\u4EE5then\u8FD8\u662Fcatch\u65B9\u6CD5\u7ED3\u5C3E,\u53EA\u8981\u6700\u540E\u4E00\u4E2A\u65B9\u6CD5\u629B\u51FA\u9519\u8BEF,\u90FD\u6709\u53EF\u80FD\u65E0\u6CD5\u6355\u6349\u5230\u3002(\u56E0\u4E3APromise\u5185\u90E8\u7684\u9519\u8BEF \u4E0D\u4F1A\u5192\u6CE1\u5230\u5168\u5C40).\u6211\u4EEC\u53EF\u4EE5\u63D0\u4F9B\u4E00\u4E2Adone\u65B9\u6CD5\uFF0C\u5B83\u603B\u662F\u5904\u4E8E\u56DE\u8C03\u94FE\u7684\u5C3E\u7AEF,\u4FDD\u8BC1\u629B\u51FA\u4EFB\u4F55\u53EF\u80FD\u51FA\u73B0\u7684\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">.prototype.</span><span style="color:#A6E22E;">done</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">onFulfilled</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">onRejected</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">(onFulfilled, onRejected).</span><span style="color:#A6E22E;">catch</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">reason</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span><span style="color:#F92672;">throw</span><span style="color:#F8F8F2;"> reason}, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function j(k,_){const n=p("ExternalLinkIcon");return t(),F("div",null,[y,s("p",null,[s("a",d,[v,l(n)])]),s("p",null,[s("a",m,[E,l(n)])]),u,s("p",null,[s("a",b,[f,l(n)])]),s("p",null,[s("a",h,[D,l(n)])]),s("p",null,[s("a",g,[A,l(n)])]),P])}var x=e(i,[["render",j],["__file","promise.html.vue"]]);export{x as default};
