import{_ as s,o as n,c as a,d as l}from"./app.7b5becf5.js";const e={},o=l(`<h1 id="redux-toolkit" tabindex="-1"><a class="header-anchor" href="#redux-toolkit" aria-hidden="true">#</a> Redux ToolKit</h1><p>redux toolkit \u662F\u5B98\u65B9\u63A8\u8350\u7684\u7F16\u5199redux\u903B\u8F91\u7684\u5DE5\u5177\u3002\u5305\u542B\u4E86redux\u7684\u6838\u5FC3\u4EE3\u7801.\u53EF\u4EE5\u7528\u6765\u66F4\u597D\u7684\u521B\u5EFAreducer\u548Cstore.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// install</span></span>
<span class="line"><span style="color:#F8F8F2;">npm install @reduxjs</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">toolkit react</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">redux</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="createslice" tabindex="-1"><a class="header-anchor" href="#createslice" aria-hidden="true">#</a> createSlice</h2><p>creating a slice requires a string name to identify the slice, and initial state value, and one or more reducer functions to define how the state can be updated.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u4E00\u4E2A\u8BA1\u6570\u5668\u6848\u4F8B</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createSlice } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> COUNTER_KEY </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;counter&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> counter </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createSlice</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: COUNTER_KEY,  </span><span style="color:#88846F;">//\u4F5C\u4E3Aaction type \u7684\u524D\u7F00</span></span>
<span class="line"><span style="color:#F8F8F2;">  initialState: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  reducers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">increment</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">decrement</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// increment\u548Cdecrement\u63A5\u53D7\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F \u4E00\u4E2A\u5BF9\u8C61, \u5305\u542Btype\u548Cpayload\u5B57\u6BB5(\u5C31\u662Faction creator\u751F\u6210\u7684\u5BF9\u8C61\u4E00\u6837)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">increment</span><span style="color:#F8F8F2;">: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">creator</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// creator {type: &#39;counter/increment&#39;, payload: undefined}</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// \u521B\u5EFA\u597Dreducer\u4E4B\u540E \u5230\u5904action creators\u548Creducer,\u63A8\u8350\u4F7F\u7528ES6\u7684\u89E3\u6784\u8BED\u6CD5</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> { increment, decrement } = counter.actions</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> counter.reducer</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>createSlice\u4F1A\u81EA\u52A8\u751F\u6210 action types \u548C action creators. \u6839\u636E\u4F20\u9012\u7ED9createSlice\u7684name\u5C5E\u6027\u548C\u51FD\u6570\u540D\u79F0 \u4E0A\u8FF0\u8BA1\u6570\u5668\u7684\u4F8B\u5B50, type \u5206\u522B\u662F counter/increment, counter/decrement\u3002</p><p>\u5982\u679C\u9700\u8981\u81EA\u5B9A\u4E49\u751F\u6210\u7684\u6570\u636E, \u53EF\u4EE5\u7ED9\u5BF9\u5E94\u7684reducer\u4F20\u9012\u4E00\u4E2A\u5BF9\u8C61, \u8BE5\u5BF9\u8C61\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570, \u4E00\u4E2Areducer \u548C \u4E00\u4E2Aprepare\u51FD\u6570\u3002 prepare\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61,\u8BE5\u5BF9\u8C61\u4E0B\u7684payload\u5C5E\u6027\u5373\u4E3A \u6700\u540E\u81EA\u5B9A\u4E49\u751F\u6210\u7684\u5185\u5BB9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todoSlice </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createSlice</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;todos&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  initialState: [],</span></span>
<span class="line"><span style="color:#F8F8F2;">  reducers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    add_todo: {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">reducer</span><span style="color:#F8F8F2;">: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ([</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">state, action.payload]),</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">prepare</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;font-style:italic;">text</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({</span></span>
<span class="line"><span style="color:#F8F8F2;">        payload: {</span></span>
<span class="line"><span style="color:#F8F8F2;">          text,</span></span>
<span class="line"><span style="color:#F8F8F2;">          id: </span><span style="color:#A6E22E;">nanoid</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">          completed: </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>createSlice() \u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61, \u8BE5\u5BF9\u8C61\u5305\u542B\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  name : string,</span></span>
<span class="line"><span style="color:#F8F8F2;">  reducer : ReducerFunction,</span></span>
<span class="line"><span style="color:#F8F8F2;">  actions : Record</span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">string, ActionCreator</span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  caseReducers: Record</span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">string, CaseReducer</span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;">.</span></span>
<span class="line"><span style="color:#F8F8F2;">  getInitialState: () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> State</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// extraReducers</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> uppercase </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo/uppercase&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> lowercase </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo/lowercase&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#A6E22E;">createSlice</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">extraReducers</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;font-style:italic;">builder</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    builder.</span><span style="color:#A6E22E;">addCase</span><span style="color:#F8F8F2;">(uppercase, (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(state, action)</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> state.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">todo</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">todo, text: todo.text.</span><span style="color:#A6E22E;">toUpperCase</span><span style="color:#F8F8F2;">()}))</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u6216\u8005\u4F7F\u7528\u5BF9\u8C61\u7684\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#F8F8F2;">  extraReducers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    [uppercase]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> (state.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">todo</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">todo, text: todo.text.</span><span style="color:#A6E22E;">toUpperCase</span><span style="color:#F8F8F2;">()})))</span></span>
<span class="line"><span style="color:#F8F8F2;">    [lowercase]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> (state.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">todo</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">todo, text: todo.text.</span><span style="color:#A6E22E;">toLowerCase</span><span style="color:#F8F8F2;">()})))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configurestore" tabindex="-1"><a class="header-anchor" href="#configurestore" aria-hidden="true">#</a> configureStore</h2><p>configureStore \u9ED8\u8BA4\u5185\u7F6E\u4E86\u4E00\u4E9B\u4E2D\u95F4\u4EF6, \u6BD4\u5982 redux-thunk, \u5F00\u53D1\u73AF\u5883\u4E0B\u5F00\u542Fdevtools</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { configureStore } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">logger</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">next</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;logger&#39;</span><span style="color:#F8F8F2;">, action)</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">next</span><span style="color:#F8F8F2;">(action)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> store </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">configureStore</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  reducer: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    counter: counterReducer</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">middleware</span><span style="color:#F8F8F2;">: (</span><span style="color:#FD971F;font-style:italic;">getDefaultMiddleware</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">getDefaultMiddleware</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(logger)</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  devTool: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="createasyncthunk" tabindex="-1"><a class="header-anchor" href="#createasyncthunk" aria-hidden="true">#</a> createAsyncThunk</h2><p>\u5728configureStore\u4E2D\u8C03\u7528\u5F02\u6B65\u903B\u8F91, \u9700\u8981\u4F7F\u7528createAsyncThunk\u51FD\u6570, \u5B83\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570, \u7B2C\u4E00\u4E2A\u53C2\u6570\u662Faction type, \u5B57\u7B26\u4E32. \u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570payloadCreator, \u8FD9\u4E2A\u51FD\u6570\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570(payload, thunkApi), thunkApi\u4E0B\u6709\u4E00\u4E2Adispatch\u65B9\u6CD5, \u53EF\u4EE5\u5728\u5F02\u6B65\u64CD\u4F5C\u7ED3\u675F\u540E dispatch\u89E6\u53D1\u66F4\u65B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> increment_async </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAsyncThunk</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;counter/async_increment&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">payload</span><span style="color:#F8F8F2;">, {</span><span style="color:#FD971F;font-style:italic;">dispatch</span><span style="color:#F8F8F2;">}) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">dispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">increment</span><span style="color:#F8F8F2;">(payload))</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span><span style="color:#AE81FF;">2000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>type\u5C06\u4F1A\u751F\u6210\u4E09\u4E2A action type \u53D8\u91CF, \u5728\u4E0A\u9762\u7684\u6848\u4F8B\u4E2D, counter/async_increment \u5C06\u4F1A\u751F\u6210\uFF1A</li></ol><p><strong>counter/async_increment/pending</strong></p><p><strong>counter/async_increment/fulfilled</strong></p><p><strong>counter/async_increment/rejected</strong></p><ol start="2"><li>payloadCreator \u8FD4\u56DE\u4E00\u4E2Apromise,\u8FD4\u56DE\u6700\u7EC8\u7684\u5F02\u6B65\u64CD\u4F5C\u540E\u7684\u7ED3\u679C\u3002\u8BE5\u51FD\u6570\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A</li></ol><p>2.1 arg: a single value, containing the first parameter that was passed to the thunk action creator when it was dispatched\u3002</p><p>2.2 thunkApi: \u662F\u4E00\u4E2A\u5BF9\u8C61,\u5305\u542Bdispatch, getState \u7B49redux store method.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u4E00\u4E2A\u5F02\u6B65\u6DFB\u52A0todo\u7684\u4F8B\u5B50</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createAsyncThunk } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> add_todo_async </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAsyncThunk</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;add_todo/async&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">payload</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">resolve</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }, </span><span style="color:#AE81FF;">2000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo_reducer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createSlice</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;todo&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  initialState: [],</span></span>
<span class="line"><span style="color:#F8F8F2;">  reducers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  extraReducers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    [add_todo_async.fulfilled]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">        id: </span><span style="color:#A6E22E;">nanoid</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">        text: action.payload,</span></span>
<span class="line"><span style="color:#F8F8F2;">        completed: </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>add_todo_async.pending / add_todo_async.fulfilled / add_todo_async.rejected \u662F\u4E00\u4E2Aaction creator. \u5B83\u4EEC\u7684toString()\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u5BF9\u5E94\u7684 action type.</p><h2 id="createaction" tabindex="-1"><a class="header-anchor" href="#createaction" aria-hidden="true">#</a> createAction</h2><p>\u4E00\u4E2A\u5DE5\u5177\u51FD\u6570\u7528\u6765\u5B9A\u4E49 redux action type \u548C action creator\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createAction } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> increment </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;counter/increment&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> action </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">increment</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">// { type: &#39;counter/increment&#39; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">action </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">increment</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// returns { type: &#39;counter/increment&#39;, payload: 3 }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(increment.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#88846F;">// &#39;counter/increment&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\u7684\u60C5\u51B5\u4E0B, \u8BE5\u53C2\u6570\u4F1A\u6210\u4E3A\u8FD4\u56DE\u503C\u7684 type \u5C5E\u6027\u3002 \u4E5F\u53EF\u4EE5\u4F20\u9012\u7B2C\u4E8C\u4E2A\u53C2\u6570 \u7528\u6765\u5B9A\u4E49\u751F\u6210\u7684payload\u3002\u8BE5\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570, \u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61, \u5BF9\u8C61\u4E0B\u6709\u4E00\u4E2Apayload\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> add_todo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo/add&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">text</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    payload: {</span></span>
<span class="line"><span style="color:#F8F8F2;">      text,</span></span>
<span class="line"><span style="color:#F8F8F2;">      completed: </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">add_todo</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hello world&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">add_todo</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;\u4F60\u597D, \u751F\u6D3B&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  payload: {text: &#39;hello world&#39;, completed: false}</span></span>
<span class="line"><span style="color:#88846F;">  type: &quot;todo/add&quot;</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">{</span></span>
<span class="line"><span style="color:#88846F;">  payload: {text: &#39;\u4F60\u597D, \u751F\u6D3B&#39;, completed: false}</span></span>
<span class="line"><span style="color:#88846F;">  type: &quot;todo/add&quot;</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="createreducer" tabindex="-1"><a class="header-anchor" href="#createreducer" aria-hidden="true">#</a> createReducer</h2><h3 id="builder-callback" tabindex="-1"><a class="header-anchor" href="#builder-callback" aria-hidden="true">#</a> Builder Callback</h3><p>\u5728redux\u4E2D\u4E66\u5199reducer\u51FD\u6570\u65F6, \u6709\u65F6\u9700\u8981\u5199\u5F88\u591A\u7684 case \u8BED\u53E5\u6765\u4E3A\u4E0D\u540C\u7684action\u5B9A\u4E49\u5BF9\u5E94\u7684\u6570\u636E\u66F4\u65B0\u3002createReducer\u53EF\u4EE5\u7B80\u5316 \u6B64\u7C7Breducer\u7684\u5B9E\u73B0.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> increment </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;counter/increment&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> decrement </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;counter/decrement&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> initial_state </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> reducer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createReducer</span><span style="color:#F8F8F2;">(initial_state, (</span><span style="color:#FD971F;font-style:italic;">builder</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  builder</span></span>
<span class="line"><span style="color:#F8F8F2;">  .</span><span style="color:#A6E22E;">addCase</span><span style="color:#F8F8F2;">(increment, (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  .</span><span style="color:#A6E22E;">addCase</span><span style="color:#F8F8F2;">(decrement, (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>initialState\u53EF\u4EE5\u4F20\u9012\u4E00\u4E2A\u6570\u503C \u6216\u8005\u4E00\u4E2A\u51FD\u6570, \u51FD\u6570\u8FD4\u56DE\u503C\u4F5C\u4E3Astate. \u6BD4\u5982\u9700\u8981\u8BFB\u53D6localStorage\u7684\u6570\u636E\u65F6\uFF01</p><p>builder.addCase() \u884C\u4E3A\u548Cswitch...case\u8BED\u53E5\u4E00\u6837\u3002 \u7B2C\u4E00\u4E2A\u53C2\u6570\u662FcreateAction() \u751F\u6210\u7684action creator \u751F\u6210\u4E00\u4E2A action type\u3002 \u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2Areducer \u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F8F8F2;">reducer.</span><span style="color:#A6E22E;">getInitialState</span><span style="color:#F8F8F2;">() </span><span style="color:#88846F;">// 0  \u83B7\u53D6\u521D\u59CB\u72B6\u6001\u503C\u3002</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>createReducer\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E5F\u53EF\u4EE5\u4F20\u9012\u4E00\u4E2A\u5BF9\u8C61, \u5BF9\u8C61\u7684\u6BCF\u4E2A\u952E\u540D \u4E3AcreateAction() \u8FD4\u56DE\u7684\u5BF9\u8C61\u4E0A\u7684type\u5B57\u6BB5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> reducer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createReducer</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  [increment.type]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  [decrement]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7528\u5230\u4E86\u5BF9\u8C61\u7684\u8BA1\u7B97\u5C5E\u6027, \u7B2C\u4E8C\u79CD\u65B9\u5F0F \u4F1A\u8C03\u7528decrement.toString()\u65B9\u6CD5, \u8BE5\u51FD\u6570\u6539\u5199\u4E86toString(),\u8FD4\u56DE\u503C\u548C\u76F4\u63A5\u8C03\u7528decrement.type \u7ED3\u679C\u662F\u4E00\u6837\u7684, \u90FD\u662F counter/decrement.</p><p>\u5728Redux\u4E2D\u8981\u6C42reducer\u5FC5\u987B\u662F\u4E00\u4E2A\u7EAF\u51FD\u6570,\u4E0D\u5141\u8BB8\u76F4\u63A5\u4FEE\u6539\u53C2\u6570state,\u4F46\u662F\u5728createReducer\u4E2D \u53EF\u4EE5\u76F4\u63A5\u4FEE\u6539\u5BF9\u8C61\u7684\u5C5E\u6027\u63D0\u4EA4, \u800C\u65E0\u9700\u4F7F\u7528\u5BF9\u8C61\u6269\u5C55\u8FD0\u7B97\u7B26 \u6216\u8005 Object.assign \u6765\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u5728\u4E00\u4E2Atodo-list\u4E2D, \u65B0\u589Etodo,\u548C toggle\u3002\u76F4\u63A5\u5728\u539F\u59CB\u6570\u7EC4push\u4E00\u6761\u6570\u636E</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createAction, createReducer } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> toggle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo/toggle&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> add </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;todo/add&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo_reducer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createReducer</span><span style="color:#F8F8F2;">([], </span><span style="color:#FD971F;font-style:italic;">builder</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  builder</span></span>
<span class="line"><span style="color:#F8F8F2;">  .</span><span style="color:#A6E22E;">addCase</span><span style="color:#F8F8F2;">(toggle, (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> action.payload</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> state[index]</span></span>
<span class="line"><span style="color:#F8F8F2;">    todo.completed </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">todo.completed</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">  .</span><span style="color:#A6E22E;">addCase</span><span style="color:#F8F8F2;">(add, (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> action.payload</span></span>
<span class="line"><span style="color:#F8F8F2;">    state.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(todo)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-object" tabindex="-1"><a class="header-anchor" href="#map-object" aria-hidden="true">#</a> Map Object</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// \u6216\u8005\u4F7F\u7528\u5BF9\u8C61\u65B9\u5F0F</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo_reducer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createReducer</span><span style="color:#F8F8F2;">([], {</span></span>
<span class="line"><span style="color:#F8F8F2;">  [toggle_todo]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> state.</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">todo</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> todo.id </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> action.payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(todo) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      todo.completed </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">todo.completed</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  [add_todo]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    state.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(action.payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5728createReducer\u4E2D,\u53EF\u4EE5\u63D0\u4EA4\u53EF\u53D8\u66F4\u65B0, \u6216\u8005 \u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u636E, \u4F46\u662F\u53EA\u80FD\u4F7F\u7528\u5176\u4E2D\u4E00\u79CD\u65B9\u5F0F, \u4E0D\u53EF\u4EE5\u5728\u53D8\u66F4state\u72B6\u6001\u540E \u518D\u5C06\u53D8\u66F4\u540E\u7684\u6570\u636E\u8FD4\u56DE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo_reducer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createReducer</span><span style="color:#F8F8F2;">([], {</span></span>
<span class="line"><span style="color:#F8F8F2;">  [toggle_todo]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> state.</span><span style="color:#A6E22E;">findIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">todo</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> todo.id </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> action.payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;">(index </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> todo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> state[index]</span></span>
<span class="line"><span style="color:#F8F8F2;">      todo.completed </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">todo.completed </span><span style="color:#88846F;">// \u53D8\u66F4\u72B6\u6001\u5C31\u53EF\u4EE5\u4E86, \u65E0\u9700\u518D\u6B21\u8FD4\u56DE\u65B0\u7684state, \u5426\u5219\u4F1A\u62A5\u9519</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> [</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">state.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, index), todo, </span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">state.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(index</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  [add_todo]: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    state.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(action.payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="current" tabindex="-1"><a class="header-anchor" href="#current" aria-hidden="true">#</a> current</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createSlice, current } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> slice </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createSlice</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;todos&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  initialState: [{ id: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, title: </span><span style="color:#E6DB74;">&#39;Example todo&#39;</span><span style="color:#F8F8F2;"> }],</span></span>
<span class="line"><span style="color:#F8F8F2;">  reducers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">addTodo</span><span style="color:#F8F8F2;">: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(state)  </span><span style="color:#88846F;">// state \u662F\u4E00\u4E2Aproxy\u5BF9\u8C61, \u5728\u63A7\u5236\u53F0\u6BD4\u8F83\u96BE\u4EE5\u9605\u8BFB</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;before&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">current</span><span style="color:#F8F8F2;">(state))</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(action.payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;after&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">current</span><span style="color:#F8F8F2;">(state))</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),p=[o];function t(c,F){return n(),a("div",null,p)}var i=s(e,[["render",t],["__file","redux-toolkit.html.vue"]]);export{i as default};
