import{_ as p,r as o,o as i,c,b as s,a,e,d as l}from"./app.084d5aed.js";var r="/blog/assets/$options.7d676096.jpeg";const F={},t=e(`<h1 id="vue-instance" tabindex="-1"><a class="header-anchor" href="#vue-instance" aria-hidden="true">#</a> Vue Instance</h1><h2 id="vue\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#vue\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> Vue\u6784\u9020\u51FD\u6570</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">//  /src/core/instance/index.js</span></span>
<span class="line"><span style="color:#88846F;">// Vue\u5B9A\u4E49\u6784\u9020\u51FD\u6570\u7684\u5730\u65B9.</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Vue</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">options</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// instanceof \u7528\u6765\u68C0\u6D4B\u6784\u9020\u51FD\u6570\u7684prototype\u662F\u5426\u51FA\u73B0\u5728\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (p<wbr>rocess.env.NODE_ENV </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;production&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">instanceof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Vue</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  ) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">warn</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Vue is a constructor and should be called with the \`new\` keyword&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">//\u521D\u59CB\u5316\u4F20\u9012\u7ED9Vue\u6784\u9020\u51FD\u6570\u7684\u6240\u6709\u9009\u9879\u3002</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">_init</span><span style="color:#F8F8F2;">(options)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// \u6CE8\u518CVue._init\u65B9\u6CD5, \u521D\u59CB\u5316vm</span></span>
<span class="line"><span style="color:#A6E22E;">initMixin</span><span style="color:#F8F8F2;">(Vue)</span></span>
<span class="line"><span style="color:#88846F;">// \u6CE8\u518Cvm\u7684$data/$props/$set/$delete/$watch</span></span>
<span class="line"><span style="color:#A6E22E;">stateMixin</span><span style="color:#F8F8F2;">(Vue)</span></span>
<span class="line"><span style="color:#88846F;">// \u6CE8\u518C$on/$once/$emit/$off</span></span>
<span class="line"><span style="color:#A6E22E;">eventsMixin</span><span style="color:#F8F8F2;">(Vue)</span></span>
<span class="line"><span style="color:#88846F;">// \u6CE8\u518C\u751F\u547D\u5468\u671F\u51FD\u6570_update/$forceUpdate/$destroy</span></span>
<span class="line"><span style="color:#A6E22E;">lifecycleMixin</span><span style="color:#F8F8F2;">(Vue)</span></span>
<span class="line"><span style="color:#88846F;">// \u6E32\u67D3\u76F8\u5173\u7684\u65B9\u6CD5\u4EE5\u53CA$nextTick / _render\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#A6E22E;">renderMixin</span><span style="color:#F8F8F2;">(Vue)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/instanceof",target:"_blank",rel:"noopener noreferrer"},d=l("MDN-instanceof"),v=e(`<h2 id="initmixin-vm" tabindex="-1"><a class="header-anchor" href="#initmixin-vm" aria-hidden="true">#</a> initMixin(vm)</h2><p>\u5728initMixin\u5185\u90E8, \u7ED9Vue\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u4E0A\u6CE8\u518C\u4E86\u4E00\u4E2A_init\u65B9\u6CD5. \u7136\u540E\u7ED9\u8BBE\u7F6E\u4E86\u4E00\u4E2A vm._isVue = true, \u9632\u6B62\u540E\u7EED\u8BBE\u7F6E\u5BF9\u8C61\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61\u65F6\u5C06\u5176\u4E5F\u8BBE\u7F6E\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// core/instance/init.js</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">Vue</span><span style="color:#F8F8F2;">.prototype.</span><span style="color:#A6E22E;">_init</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">options</span><span style="color:#F8F8F2;">) { </span><span style="color:#88846F;">// \u7528\u6237\u4F20\u9012\u7684options\u9009\u9879</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u6807\u8BC6\u5F53\u524D\u662F\u4E00\u4E2A\u5B9E\u4F8B</span></span>
<span class="line"><span style="color:#F8F8F2;">  vm._isVue </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">/* \u5408\u5E76options, \u5224\u65AD\u662F\u7EC4\u4EF6\u8FD8\u662FVue\u5B9E\u4F8B, \u5C06\u5408\u5E76\u540E\u7684\u9009\u9879\u4F5C\u4E3Avm.$options\u7684\u503C</span></span>
<span class="line"><span style="color:#88846F;">    \u6B64\u5904\u5148\u8DF3\u8FC7\u3002\u3002\u3002 </span></span>
<span class="line"><span style="color:#88846F;">  */</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (options </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> options._isComponent) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">initInternalComponent</span><span style="color:#F8F8F2;">(vm, options)</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    vm.$options </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">mergeOptions</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">resolveConstructorOptions</span><span style="color:#F8F8F2;">(vm.constructor),  </span><span style="color:#88846F;">// parent</span></span>
<span class="line"><span style="color:#F8F8F2;">      options </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> {},  </span><span style="color:#88846F;">// child</span></span>
<span class="line"><span style="color:#F8F8F2;">      vm  </span><span style="color:#88846F;">// instance</span></span>
<span class="line"><span style="color:#F8F8F2;">    )</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u7ED9vm._renderProxy \u8D4B\u503C\u4E3A\u5F53\u524Dvm\u5B9E\u4F8B</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (p<wbr>rocess.env.NODE_ENV </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;production&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">initProxy</span><span style="color:#F8F8F2;">(vm)</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    vm._renderProxy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> vm</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// initProxy \u65B9\u6CD5</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> initProxy</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (p<wbr>rocess.env.NODE_ENV </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;production&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5B9A\u4E49\u4E00\u4E2A\u767D\u540D\u5355,\u5141\u8BB8\u5728\u6A21\u7248\u4E2D\u76F4\u63A5\u4F7F\u7528\u800C\u4E0D\u7528\u5728data\u4E2D \u6216\u8005 methods\u4E2D\u5B9A\u4E49\u7684\u6570\u636E\u6216\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">/*\u4E0B\u9762\u7684\u53D8\u91CF\u5728js\u5168\u5C40\u73AF\u5883\u4E2D \u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u7684,\u6240\u4EE5\u53EF\u4E0D\u5728data,\u6216\u8005methods computed\u4E2D\u5B9A\u4E49*/</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> allowedGlobals </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">makeMap</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;Infinity,undefined,NaN,isFinite,isNaN,&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;parseFloat,parseInt,decodeURI,decodeURIComponent,&#39;</span><span style="color:#F92672;">+</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;encodeURI,encodeURIComponent,&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,&#39;</span><span style="color:#F92672;">+</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;Set,JSON,Intl,BigInt,&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;require&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">warnNonPresent</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// \u5C5E\u6027\u6216\u8005\u65B9\u6CD5 \u6CA1\u6709\u8BBE\u7F6E\u4F46\u662F\u5728 \u6A21\u7248\u4E2D\u4E2D\u4F7F\u7528\u4E86\u3002</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">warnReservedPrefix</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// ... \u7701\u7565</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// \u5224\u65AD\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301 Proxy</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> hasProxy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">!==</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;undefined&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">&amp;&amp;</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">isNative</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (hasProxy) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// \u5185\u7F6E\u7684\u4E8B\u4EF6\u6807\u8BC6\u7B26,\u5224\u65AD\u662F\u5426\u662FVue\u5185\u7F6E\u63D0\u4F9B\u7684\u4E8B\u4EF6\u4FEE\u9970\u7B26,\u5982\u679C\u662F\u7684\u8BDD\u7981\u6B62</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> isBuiltInModifier</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">makeMap</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;stop,prevent,self,ctrl,shift,alt,meta,exact&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    config.keyCodes </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">(config.keyCodes, {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;">isBuiltInModifier</span><span style="color:#F8F8F2;">(key)) { </span><span style="color:#88846F;">// \u5982\u679C\u662F\u5185\u7F6E\u7684\u4E8B\u4EF6\u4FEE\u9970\u7B26,\u5219\u4E0D\u5141\u8BB8\u4FEE\u6539</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#A6E22E;">warn</span><span style="color:#F8F8F2;">(</span><span style="color:#88846F;">//...)</span></span>
<span class="line"><span style="color:#F8F8F2;">          return </span><span style="color:#AE81FF;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">        } else {</span></span>
<span class="line"><span style="color:#F8F8F2;">          target[key] = value</span></span>
<span class="line"><span style="color:#F8F8F2;">          return true</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  const hasHandler = {  </span><span style="color:#88846F;">// \u5BF9\u8C61 in \u64CD\u4F5C\u7B26\u8FDB\u884C\u4EE3\u7406</span></span>
<span class="line"><span style="color:#F8F8F2;">    has (target, key) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      const has = key in target </span><span style="color:#88846F;">//\u5224\u65AD\u5C5E\u6027\u662F\u5C5E\u4E8Evm\u5B9E\u4F8B\u4E0A\u7684\u5C5E\u6027</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">      \u5982\u679C\u5C5E\u6027\u662F\u5728\u767D\u540D\u5355\u91CC \u6216\u8005 \u662F\u4EE5\u4E0B\u5212\u7EBF\u5F00\u5934\u7684\u5B57\u7B26\u4E32\u5E76\u4E14\u4E0D\u5728$data\u91CC </span></span>
<span class="line"><span style="color:#88846F;">      ,\u5728\u7F16\u8BD1\u65F6\u662F\u53EF\u4EE5\u8BBF\u95EE\u5230\u7684\u5C5E\u6027(\u6E32\u67D3\u51FD\u6570_c _v\u7B49)</span></span>
<span class="line"><span style="color:#88846F;">      */</span></span>
<span class="line"><span style="color:#F8F8F2;">      const isAllowed = </span></span>
<span class="line"><span style="color:#F8F8F2;">        allowedGlobals(key) || </span></span>
<span class="line"><span style="color:#F8F8F2;">        (typeof key === &#39;string&#39; &amp;&amp; </span></span>
<span class="line"><span style="color:#F8F8F2;">        key.charAt(0) === &#39;_&#39; &amp;&amp; !(key in target.$data))</span></span>
<span class="line"><span style="color:#F8F8F2;">      if (!has &amp;&amp; !isAllowed) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        if (key in target.$data) warnReservedPrefix(target, key)</span></span>
<span class="line"><span style="color:#F8F8F2;">        else warnNonPresent(target, key)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      return has || !isAllowed</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  const getHandler = {  </span><span style="color:#88846F;">// \u62E6\u622A\u5BF9\u8C61\u7684\u5C5E\u6027\u8BFB\u53D6\u64CD\u4F5C</span></span>
<span class="line"><span style="color:#F8F8F2;">    get (target, key) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      if (typeof key === &#39;string&#39; &amp;&amp; !(key in target)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        if (key in target.$data) warnReservedPrefix(target, key)</span></span>
<span class="line"><span style="color:#F8F8F2;">        else warnNonPresent(target, key)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      return target[key]</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  initProxy = function initProxy (vm) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    if (hasProxy) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      const options = vm.$options </span><span style="color:#88846F;">// \u4F20\u9012\u7ED9Vue\u6784\u9020\u51FD\u6570\u7684\u521D\u59CB\u5316\u9009\u9879 options\u3002</span></span>
<span class="line"><span style="color:#F8F8F2;">      const handlers = options.render &amp;&amp; options.render._withStripped</span></span>
<span class="line"><span style="color:#F8F8F2;">        ? getHandler</span></span>
<span class="line"><span style="color:#F8F8F2;">        : hasHandler</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// \u5C06\u4EE3\u7406\u5BF9\u8C61\u8D4B\u503C\u7ED9vm._renderProxy,\u5BF9vm\u5B9E\u4F8B\u5BF9\u8C61\u7684\u5C5E\u6027\u8BBF\u95EE\u4F1A\u88AB\u62E6\u622A\u3002</span></span>
<span class="line"><span style="color:#F8F8F2;">      vm._renderProxy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">(vm, handlers)</span></span>
<span class="line"><span style="color:#F8F8F2;">    } else {</span></span>
<span class="line"><span style="color:#F8F8F2;">      vm._renderProxy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> vm</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">vm.$options.render = function(){</span></span>
<span class="line"><span style="color:#88846F;">  with(this){ this\u6307\u5411vm._renderProxy</span></span>
<span class="line"><span style="color:#88846F;">    return _c(&#39;div&#39;,[_v(_s(a))])</span></span>
<span class="line"><span style="color:#88846F;">  }</span></span>
<span class="line"><span style="color:#88846F;">}</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#88846F;">/*</span></span>
<span class="line"><span style="color:#88846F;">\u5728with\u8BED\u53E5\u5757\u5185\u8BBF\u95EEa \u5C31\u76F8\u5F53\u4E8E\u8BBF\u95EEvm._renderProxy\u7684a\u5C5E\u6027\u3002</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span>
<span class="line"><span style="color:#F8F8F2;">export { initProxy }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#272822;"><code><span class="line"><span style="color:#88846F;">// $options</span></span>
<span class="line"><span style="color:#88846F;">/*\u7528\u4E8E\u5C06\u5F53\u524DVue\u5B9E\u4F8B\u7684\u521D\u59CB\u5316\u9009\u9879\u3002\u9700\u8981\u5728\u9009\u9879\u4E2D\u5305\u542B\u81EA\u5B9A\u4E49property\u65F6\u4F1A\u6709\u7528\u5904*/</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Vue</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  el:</span><span style="color:#E6DB74;">&#39;#proxy-instance&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  name: </span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  foo: </span><span style="color:#E6DB74;">&#39;123&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">created</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.$options.name) </span><span style="color:#88846F;">// hello</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// optionMergeStrategies</span></span>
<span class="line"><span style="color:#F8F8F2;">Vue.config.optionMergeStrategies.</span><span style="color:#A6E22E;">_my_option</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">parent</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">child</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">vm</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> child </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> Profile </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Vue.</span><span style="color:#A6E22E;">extend</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  _my_option: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#88846F;">// Profile.options._my_option = 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+'" alt="$options"></p>',6),u={href:"https://cn.vuejs.org/v2/api/#vm-options",target:"_blank",rel:"noopener noreferrer"},m=l("Vue-$options-api\u6587\u6863"),b={href:"https://blog.csdn.net/nicexibeidage/article/details/82112055",target:"_blank",rel:"noopener noreferrer"},E=l("instance-proxy\u53C2\u8003");function f(h,_){const n=o("ExternalLinkIcon");return i(),c("div",null,[t,s("p",null,[s("a",y,[d,a(n)])]),v,s("p",null,[s("a",u,[m,a(n)])]),s("p",null,[s("a",b,[E,a(n)])])])}var x=p(F,[["render",f],["__file","vue-instance.html.vue"]]);export{x as default};
